{"version":3,"sources":["utils/image/add.svg","utils/image/locked_project.svg","utils/image/project.svg","components/TextInput/index.js","utils/configConst.js","components/FormInput/index.js","utils/api/api.js","utils/api/apifetcher/profile.js","containers/Auth/constants.js","containers/Auth/actions.js","utils/api/apifetcher/auth.js","utils/pathConst.js","components/Layout/Header/index.js","components/Layout/NavSideBar/constants.js","components/Layout/NavSideBar/index.js","components/Layout/index.js","components/AuthFrom/AuthLayout.js","components/AuthFrom/LoginForm.js","components/AuthFrom/constents.js","components/AuthFrom/RegisterFrom.js","components/Dashboard/index.js","components/AddButton/index.js","components/PopUp/index.js","components/LoadingSpinner/index.js","components/FormFooterBtn/index.js","components/FormFooterBtn/constants.js","components/ProjectForm/constant.js","components/ProjectForm/index.js","components/ProjectCard/constant.js","components/ProjectCard/index.js","containers/Projects/constants.js","utils/api/apifetcher/project.js","containers/Projects/actions.js","containers/Projects/index.js","containers/Issue/constants.js","containers/Issue/index.js","containers/Issue/actions.js","App.js","containers/Projects/reducer.js","containers/Issue/reducer.js","containers/Auth/reducer.js","reducers/index.js","store/index.js","serviceWorker.js","index.js"],"names":["module","exports","TextInput","type","name","onChange","value","placeholder","onblur","alertMessage","className","onBlur","apihost","red_alert","inputType","FormInput","handleInput","inputList","handleInputOnblur","Fragment","map","e","key","title","option","radioOption","index","isChecked","parseInt","checked","axios","defaults","headers","post","api","instance","create","timeout","onUploadProgress","progressEvent","document","body","style","cursor","loaded","total","fire","a","options","request","ProfileAPI","url","localStorage","getItem","method","profileId","AUTH_SUCCESS","AUTH_LOGOUT","authSuccess","data","dispatch","payload","username","sessionId","setItem","logout","removeItem","AuthAPI","query","email","LOGIN","REGISTER","DASHBOARD","PROJECT","ISSUE","SETTING","withRouter","props","useDispatch","useSelector","state","AuthReducer","to","PATH","onClick","action","history","push","SIDE_BAR_ITEMS","path","NavSideBar","item","isLogined","children","useEffect","actions","getMyProfile","then","res","AuthLayout","linkTo","link","buttonEnable","handleSubmit","submitButtom","useState","setEmail","emailAlertMsg","setEmailAlertMsg","password","setPassword","passwordAlertMsg","setPasswordAlertMsg","login","sha256","rej","response","status","target","confirmPassword","setConfirmPassword","confirmPasswordAlertMsg","setUsername","usernameAlertMsg","setUsernameAlertMsg","checkEmailExist","verifyEmail","checkUsernameExist","verifyUsername","handleRegister","register","Dashboard","AddButton","wording","src","ADD","PopUp","LoadingSpinner","FormFooterBtn","handleLeftOption","handleRightOption","leftOption","rightOption","isActive","PROJECT_FORM_CONST","ProjectForm","handleCancel","errorMsg","setName","description","setDescription","isPrivate","setIsPrivate","length","CONST","ProjectCard","id","create_time","owner","createAt","Date","PRIVATE_ICON","PUBLIC_ICON","toLocaleString","FETCH_PROJECTS","FETCH_PROJECTS_SUCCESS","FETCH_PROJECTS_BOTTOM","TOGGLE_NEW_PROJECT_FORM","ADD_NEW_PROJECT","ADD_NEW_PROJECT_SUCCESS","ADD_NEW_PROJECT_FAIL","ProjectApi","fetchProjects","getState","ProjectsReducer","projectTimestamp","isFetchingProject","timestamp","user_id","limit","isOwner","getProject","console","log","Projects","useStore","projectList","isProjectFetchBottom","isAddingProject","showNewProjectForm","newProjectErrorMsg","handleScroll","window","innerHeight","Math","ceil","scrollY","offsetHeight","addEventListener","removeEventListener","toggleNewProjectForm","addNewProject","FETCH_ISSUE_SUCCESS","Issue","issueList","IssueReducer","App","process","basename","component","LoginFrom","RegisterFrom","exact","initialState","combineReducers","concat","store","createStore","reducers","middlewares","ReduxThunk","ReduxPromise","compose","applyMiddleware","enhancer","Boolean","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ba46c19b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/add.151f63a5.svg\";","module.exports = __webpack_public_path__ + \"static/media/locked_project.cdd8dc1e.svg\";","module.exports = __webpack_public_path__ + \"static/media/project.54e467ef.svg\";","import React from \"react\";\r\n\r\nimport \"./style.scss\";\r\n\r\nconst TextInput = ({\r\n  type,\r\n  name,\r\n  onChange,\r\n  value,\r\n  placeholder,\r\n  onblur,\r\n  alertMessage\r\n}) => {\r\n  return (\r\n    <div>\r\n      <input\r\n        className=\"text_input w-full border-b-2\"\r\n        type={type}\r\n        name={name}\r\n        onChange={onChange}\r\n        value={value}\r\n        placeholder={placeholder}\r\n        onBlur={onblur}\r\n      />\r\n      <div className=\"text_input_alert text-14 text-red-600\">\r\n        {alertMessage}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TextInput;\r\n","export const apihost = {\r\n  local: \"http://127.0.0.1:8080\",\r\n  dev: \"https://its-api.herokuapp.com\",\r\n  prod: \"https://its-api.herokuapp.com\"\r\n};\r\n\r\nexport const FETCH_PROJECT_LIMIT = 15;\r\n\r\nexport const red_alert = {\r\n  LOGIN_EMAIL_NOT_EXIST:\r\n    \"We don't recognize this email, please sign up to get started\",\r\n  LOGIN_FAIL: \"Login fail. Please try again\",\r\n  REGISTER_FAIL: \"Register fail. Please try again\",\r\n\r\n  REGISTER_EMAIL_EXIST: \"This email address is already in use\",\r\n  REGISTER_USERNAME_EXIST: \"This username is already in use\",\r\n\r\n  TRY_AGAIN_LATHER: \"Something when wrong. Please try again later.\",\r\n  PROJECT_NAME_REPEATED: \"Project name repeated.\"\r\n};\r\n\r\nexport const inputType = {\r\n  text_alert: \"text_alert\",\r\n  text: \"text\",\r\n  textarea: \"textarea\",\r\n  radio: \"radio\"\r\n};\r\n","import React from \"react\";\r\n\r\nimport TextInput from \"../TextInput\";\r\n\r\nimport { inputType } from \"../../utils/configConst\";\r\n\r\nimport \"./style.scss\";\r\n\r\nconst FormInput = ({ handleInput, inputList, handleInputOnblur }) => {\r\n  return (\r\n    <React.Fragment>\r\n      {inputList.map(e => {\r\n        const renderInput = () => {\r\n          if (e.inputType === inputType.text_alert)\r\n            return (\r\n              <TextInput\r\n                name={e.name}\r\n                type={e.type}\r\n                onChange={handleInput}\r\n                value={e.value}\r\n                placeholder={e.placeholder}\r\n                alertMessage={e.alertMessage}\r\n                onblur={handleInputOnblur}\r\n              />\r\n            );\r\n          if (e.inputType === inputType.text)\r\n            return (\r\n              <input\r\n                className=\"formInput_text w-full\"\r\n                name={e.name}\r\n                type={e.type}\r\n                onChange={handleInput}\r\n                value={e.value}\r\n                placeholder={e.placeholder}\r\n                onBlur={handleInputOnblur}\r\n              />\r\n            );\r\n          if (e.inputType === inputType.textarea) {\r\n            return (\r\n              <textarea\r\n                className=\"formInput_textarea w-full\"\r\n                name={e.name}\r\n                onChange={handleInput}\r\n                value={e.value}\r\n                placeholder={e.placeholder}\r\n              />\r\n            );\r\n          }\r\n          if (e.inputType === inputType.radio) {\r\n            return (\r\n              <div className=\"formInput_radio_container flex flex-wrap\">\r\n                {e.option.map((radioOption, index) => {\r\n                  const isChecked = index === parseInt(e.value);\r\n                  return (\r\n                    <div\r\n                      key={`formInput_radio${radioOption}${index}`}\r\n                      className=\"formInput_radio_layout flex relative\"\r\n                    >\r\n                      <div\r\n                        className={`formInput_radio  rounded-full border-main border-solid ${\r\n                          isChecked ? \"border-5\" : \"border-2\"\r\n                        }`}\r\n                      >\r\n                        <input\r\n                          className=\"absolute top-0 left-0 w-full h-full opacity-0\"\r\n                          type=\"radio\"\r\n                          name={e.name}\r\n                          value={index}\r\n                          checked={isChecked}\r\n                          onChange={handleInput}\r\n                        />\r\n                      </div>\r\n                      {radioOption}\r\n                    </div>\r\n                  );\r\n                })}\r\n                <br />\r\n              </div>\r\n            );\r\n          }\r\n          return \"\";\r\n        };\r\n        return (\r\n          <React.Fragment key={`formInput${e.name}`}>\r\n            {e.title ? (\r\n              <div className=\"formInput_title font-semibold\">{e.title}</div>\r\n            ) : null}\r\n            {renderInput()}\r\n          </React.Fragment>\r\n        );\r\n      })}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default FormInput;\r\n","import axios from \"axios\";\r\n\r\naxios.defaults.headers.post[\"Content-Type\"] = \"application/json\";\r\n\r\nconst api = {};\r\nexport const instance = axios.create({\r\n  timeout: 5000,\r\n  onUploadProgress: progressEvent => {\r\n    document.body.style.cursor =\r\n      progressEvent.loaded === progressEvent.total ? \"default\" : \"progress\";\r\n  }\r\n});\r\n\r\napi.fire = async options => {\r\n  return instance.request(options);\r\n};\r\n\r\nexport default api;\r\n","import api from \"../api\";\r\nimport { apihost } from \"../../configConst\";\r\n\r\nconst ProfileAPI = {};\r\n\r\nProfileAPI.getMyProfile = () => {\r\n  const url = `${\r\n    apihost[process.env.REACT_APP_ENV]\r\n    }/profile/me?sessionId=${localStorage.getItem(\r\n      \"sessionId\"\r\n    )}&profileId=${localStorage.getItem(\"profileId\")}`;\r\n  return api.fire({\r\n    url,\r\n    method: \"GET\"\r\n  });\r\n};\r\n\r\nProfileAPI.getProfileById = profileId => {\r\n  const url = `${apihost[process.env.REACT_APP_ENV]}/profile?profileId=${profileId}`;\r\n  return api.fire({\r\n    url,\r\n    method: \"GET\"\r\n  });\r\n};\r\n\r\nexport default ProfileAPI;\r\n","export const AUTH_SUCCESS = \"Auth/AUTH_SUCCESS\";\r\nexport const AUTH_LOGOUT = \"Auth/AUTH_LOGOUT\";\r\n","import { AUTH_SUCCESS, AUTH_LOGOUT } from \"./constants\";\r\n\r\nexport const authSuccess = data => dispatch => {\r\n  const payload = {\r\n    username: data.username\r\n  };\r\n  if (data.sessionId) localStorage.setItem(\"sessionId\", data.sessionId);\r\n  if (data.profileId === 0 || data.profileId)\r\n    localStorage.setItem(\"profileId\", data.profileId);\r\n  dispatch({ type: AUTH_SUCCESS, payload });\r\n};\r\n\r\nexport const logout = () => dispatch => {\r\n  localStorage.removeItem(\"sessionId\");\r\n  localStorage.removeItem(\"profileId\");\r\n  dispatch({ type: AUTH_LOGOUT });\r\n};\r\n","import api from \"../api\";\r\nimport { apihost } from \"../../configConst\";\r\n\r\nconst AuthAPI = {};\r\n\r\nAuthAPI.register = query => {\r\n  const url = `${apihost[process.env.REACT_APP_ENV]}/session`;\r\n  return api.fire({\r\n    url,\r\n    method: \"POST\",\r\n    data: query\r\n  });\r\n};\r\n\r\nAuthAPI.login = query => {\r\n  const url = `${apihost[process.env.REACT_APP_ENV]}/session/login`;\r\n  return api.fire({\r\n    url,\r\n    method: \"POST\",\r\n    data: query\r\n  });\r\n};\r\n\r\nAuthAPI.logout = () => {\r\n  const url = `${\r\n    apihost[process.env.REACT_APP_ENV]\r\n    }/session/logout?sessionId=${localStorage.getItem(\"sessionId\")}`;\r\n  return api.fire({\r\n    url,\r\n    method: \"DELETE\"\r\n  });\r\n};\r\n\r\nAuthAPI.verifyEmail = email => {\r\n  const url = `${\r\n    apihost[process.env.REACT_APP_ENV]\r\n    }/session/verify/email?email=${email}`;\r\n  return api.fire({\r\n    url,\r\n    method: \"GET\"\r\n  });\r\n};\r\n\r\nAuthAPI.verifyUsername = username => {\r\n  const url = `${\r\n    apihost[process.env.REACT_APP_ENV]\r\n    }/session/verify/username?username=${username}`;\r\n  return api.fire({\r\n    url,\r\n    method: \"GET\"\r\n  });\r\n};\r\n\r\nexport default AuthAPI;\r\n","export const LOGIN = \"/login\";\r\nexport const REGISTER = \"/register\";\r\nexport const DASHBOARD = \"/dashboard\";\r\nexport const PROJECT = \"/project\";\r\nexport const ISSUE = \"/issue\";\r\nexport const SETTING = \"/setting\";\r\nexport const PROFILE = \"/:user\";\r\n","import React from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport AuthAPI from \"../../../utils/api/apifetcher/auth\";\r\n\r\nimport * as action from \"../../../containers/Auth/actions\";\r\nimport * as PATH from \"../../../utils/pathConst\";\r\n\r\nimport \"./header.scss\";\r\n\r\nconst Header = props => {\r\n  const dispatch = useDispatch();\r\n  const { username } = useSelector(state => state.AuthReducer);\r\n\r\n  const handleLogout = () => {\r\n    AuthAPI.logout();\r\n    action.logout()(dispatch);\r\n    props.history.push(\"/login\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"header flex justify-between items-center bg-blue-500 sticky top-0\">\r\n      <div className=\"text-28\">\r\n        <Link to={PATH.DASHBOARD}>ITS</Link>\r\n      </div>\r\n      <div className=\"header_link_container flex text-16\">\r\n        <div className=\"header_link\">{`Hi ${username}`}</div>\r\n        <div className=\"header_link cursor-pointer\" onClick={handleLogout}>\r\n          Logout\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withRouter(Header);\r\n","import { DASHBOARD, PROJECT, ISSUE } from \"../../../utils/pathConst\";\r\n\r\nexport const SIDE_BAR_ITEMS = [\r\n  { name: \"Dashboard\", path: DASHBOARD },\r\n  { name: \"Projects\", path: PROJECT },\r\n  { name: \"Issue\", path: ISSUE }\r\n];\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { SIDE_BAR_ITEMS } from \"./constants\";\r\nimport \"./index.scss\";\r\n\r\nconst NavSideBar = props => {\r\n  return (\r\n    <div className=\"nav_sidebar bg-333\">\r\n      <div className=\"nav_sidebar_container fixed flex flex-col\">\r\n        {SIDE_BAR_ITEMS.map(item => (\r\n          <Link\r\n            key={`sliderBar_${item.name}`}\r\n            className=\"nav_sidebar_link text-white font-bold\"\r\n            to={item.path}\r\n          >\r\n            {item.name}\r\n          </Link>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NavSideBar;\r\n","import React, { useEffect } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport ProfileAPI from \"../../utils/api/apifetcher/profile\";\r\n\r\nimport * as actions from \"../../containers/Auth/actions\";\r\n\r\nimport Header from \"./Header\";\r\nimport NavSideBar from \"./NavSideBar\";\r\n\r\nconst Layout = ({ isLogined, history, children }) => {\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    if (isLogined) {\r\n      if (!localStorage.getItem(\"sessionId\")) {\r\n        actions.logout()(dispatch);\r\n        history.push(\"/login\");\r\n        return;\r\n      }\r\n      ProfileAPI.getMyProfile().then(\r\n        res => {\r\n          actions.authSuccess(res.data)(dispatch);\r\n        },\r\n        () => {\r\n          actions.logout()(dispatch);\r\n          history.push(\"/login\");\r\n          return;\r\n        }\r\n      );\r\n    } else {\r\n      if (localStorage.getItem(\"sessionId\")) {\r\n        history.push(\"/dashboard\");\r\n        return;\r\n      }\r\n    }\r\n  }, []);\r\n  return (\r\n    <div className=\"layout min-h-screen flex flex-col\">\r\n      {isLogined ? (\r\n        <React.Fragment>\r\n          <Header />\r\n          <div className=\"flex flex-grow\">\r\n            <NavSideBar />\r\n            {children}\r\n          </div>\r\n        </React.Fragment>\r\n      ) : (\r\n        children\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withRouter(Layout);\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Layout from \"../Layout\";\r\n\r\nimport \"./auth.scss\";\r\n\r\nconst AuthLayout = ({\r\n  title,\r\n  children,\r\n  linkTo,\r\n  link,\r\n  buttonEnable,\r\n  handleSubmit,\r\n  submitButtom\r\n}) => {\r\n  return (\r\n    <Layout isLogined={false}>\r\n      <div className=\"auth_layout text-18 flex justify-center items-center w-full h-full min-h-screen bg-blue-400\">\r\n        <div className=\"auth_form mx-auto w-full bg-white rounded\">\r\n          <div className=\"auth_form_title text-blue-600 text-28 inline-block\">\r\n            {title}\r\n          </div>\r\n          {children}\r\n          <Link\r\n            className=\"auth_bottom_link text-blue-600 text-14 block\"\r\n            to={linkTo}\r\n          >\r\n            {link}\r\n          </Link>\r\n          <span\r\n            className={`main_btn btn-active btn-sm inline-block${\r\n              buttonEnable ? \"\" : \" disable\"\r\n            }`}\r\n            onClick={handleSubmit}\r\n          >\r\n            {submitButtom}\r\n          </span>\r\n        </div>\r\n      </div>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default AuthLayout;\r\n","import React, { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nimport FormInput from \"../FormInput\";\r\nimport AuthLayout from \"./AuthLayout\";\r\n\r\nimport * as CONST from \"./constents\";\r\nimport { red_alert, inputType } from \"../../utils/configConst\";\r\nimport { REGISTER } from \"../../utils/pathConst\";\r\n\r\nimport AuthAPI from \"../../utils/api/apifetcher/auth\";\r\nimport * as actions from \"../../containers/Auth/actions\";\r\nimport sha256 from \"sha256\";\r\n\r\nconst LoginForm = props => {\r\n  const dispatch = useDispatch();\r\n\r\n  const [email, setEmail] = useState(\"\");\r\n  const [emailAlertMsg, setEmailAlertMsg] = useState(\"\");\r\n\r\n  const [password, setPassword] = useState(\"\");\r\n  const [passwordAlertMsg, setPasswordAlertMsg] = useState(\"\");\r\n\r\n  const handleInput = e => {\r\n    const { name } = e.target;\r\n    const { value } = e.target;\r\n    switch (name) {\r\n      case CONST.EMAIL:\r\n        setEmail(value);\r\n        break;\r\n      case CONST.PASSOWRD:\r\n        setPassword(value);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    AuthAPI.login({ email, password: sha256(password) }).then(\r\n      res => {\r\n        const { data } = res;\r\n        actions.authSuccess(data)(dispatch);\r\n        props.history.push(\"/dashboard\");\r\n      },\r\n      rej => {\r\n        const { status } = rej.response;\r\n        switch (status) {\r\n          case 401:\r\n            setPasswordAlertMsg(red_alert.LOGIN_FAIL);\r\n            setEmailAlertMsg(\"\");\r\n            break;\r\n          case 404:\r\n            setPasswordAlertMsg(\"\");\r\n            setEmailAlertMsg(red_alert.LOGIN_EMAIL_NOT_EXIST);\r\n            break;\r\n          default:\r\n            setPasswordAlertMsg(red_alert.LOGIN_FAIL);\r\n            setEmailAlertMsg(\"\");\r\n            break;\r\n        }\r\n      }\r\n    );\r\n  };\r\n  const handleInputOnblur = e => {};\r\n  const inputList = [\r\n    {\r\n      name: CONST.EMAIL,\r\n      type: \"text\",\r\n      value: email,\r\n      placeholder: CONST.EMAIL_PLACEHOLDER,\r\n      alertMessage: emailAlertMsg,\r\n      inputType: inputType.text_alert\r\n    },\r\n    {\r\n      name: CONST.PASSOWRD,\r\n      type: \"password\",\r\n      value: password,\r\n      placeholder: CONST.PASSWORD_PLACEHOLDER,\r\n      alertMessage: passwordAlertMsg,\r\n      inputType: inputType.text_alert\r\n    }\r\n  ];\r\n\r\n  return (\r\n    <AuthLayout\r\n      title={CONST.LOGIN_TITLE}\r\n      link={CONST.REGISTER_LINK}\r\n      linkTo={REGISTER}\r\n      submitButtom={CONST.LOGIN_BUTTON}\r\n      handleSubmit={handleSubmit}\r\n      buttonEnable={email && password}\r\n    >\r\n      <FormInput\r\n        inputList={inputList}\r\n        handleInput={handleInput}\r\n        handleInputOnblur={handleInputOnblur}\r\n      />\r\n    </AuthLayout>\r\n  );\r\n};\r\n\r\nexport default withRouter(LoginForm);\r\n","export const LOGIN_TITLE = \"Login\";\r\nexport const REGISTER_TITLE = \"Register\";\r\n\r\nexport const LOGIN_BUTTON = \"Login\";\r\nexport const REGISTER_BUTTON = \"Register\";\r\n\r\nexport const EMAIL = \"email\";\r\nexport const PASSOWRD = \"password\";\r\nexport const CONFIRM_PASSOWRD = \"confirm_username\";\r\nexport const USERNAME = \"username\";\r\n\r\nexport const EMAIL_PLACEHOLDER = \"Email\";\r\nexport const PASSWORD_PLACEHOLDER = \"Password\";\r\nexport const CONFIRM_PASSOWRD_PLACEHOLDER = \"Confirm passowrd\";\r\nexport const USERNAME_PLACEHOLDER = \"Username\";\r\n\r\nexport const REGISTER_LINK = \"Don't have an account? Sign up now!\";\r\n\r\nexport const LOGIN_LINK = \"Already have an account? Log in now!\";\r\n","import React, { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nimport FormInput from \"../FormInput\";\r\nimport AuthLayout from \"./AuthLayout\";\r\n\r\nimport * as CONST from \"./constents\";\r\nimport { red_alert, inputType } from \"../../utils/configConst\";\r\nimport { LOGIN } from \"../../utils/pathConst\";\r\n\r\nimport AuthAPI from \"../../utils/api/apifetcher/auth\";\r\nimport * as actions from \"../../containers/Auth/actions\";\r\nimport sha256 from \"sha256\";\r\n\r\nconst RegisterForm = props => {\r\n  const dispatch = useDispatch();\r\n\r\n  const [email, setEmail] = useState(\"\");\r\n  const [emailAlertMsg, setEmailAlertMsg] = useState(\"\");\r\n\r\n  const [password, setPassword] = useState(\"\");\r\n  const [passwordAlertMsg, setPasswordAlertMsg] = useState(\"\");\r\n\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n  const [confirmPasswordAlertMsg, setConfirmPasswordAlertMsg] = useState(\"\");\r\n\r\n  const [username, setUsername] = useState(\"\");\r\n  const [usernameAlertMsg, setUsernameAlertMsg] = useState(\"\");\r\n\r\n  const handleInput = e => {\r\n    const { name } = e.target;\r\n    const { value } = e.target;\r\n    switch (name) {\r\n      case CONST.EMAIL:\r\n        setEmail(value);\r\n        break;\r\n      case CONST.PASSOWRD:\r\n        setPassword(value);\r\n        break;\r\n      case CONST.CONFIRM_PASSOWRD:\r\n        setConfirmPassword(value);\r\n        break;\r\n      case CONST.USERNAME:\r\n        setUsername(value);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  const checkEmailExist = () => {\r\n    if (!email) {\r\n      setEmailAlertMsg(\"\");\r\n      return false;\r\n    }\r\n    return AuthAPI.verifyEmail(email).then(\r\n      () => {\r\n        setEmailAlertMsg(red_alert.REGISTER_EMAIL_EXIST);\r\n        return false;\r\n      },\r\n      () => {\r\n        setEmailAlertMsg(\"\");\r\n        return true;\r\n      }\r\n    );\r\n  };\r\n\r\n  const checkUsernameExist = () => {\r\n    if (!username) {\r\n      setUsernameAlertMsg(\"\");\r\n      return false;\r\n    }\r\n    return AuthAPI.verifyUsername(username).then(\r\n      () => {\r\n        setUsernameAlertMsg(red_alert.REGISTER_USERNAME_EXIST);\r\n        return false;\r\n      },\r\n      () => {\r\n        setUsernameAlertMsg(\"\");\r\n        return true;\r\n      }\r\n    );\r\n  };\r\n\r\n  const handleSubmit = async e => {\r\n    if ((await checkEmailExist()) && (await checkUsernameExist())) {\r\n      handleRegister();\r\n    }\r\n  };\r\n\r\n  const handleRegister = () => {\r\n    AuthAPI.register({ email, password: sha256(password), username }).then(\r\n      res => {\r\n        const { data } = res;\r\n\r\n        actions.authSuccess(data)(dispatch);\r\n        props.history.push(\"/dashboard\");\r\n      },\r\n      rej => {\r\n        setUsernameAlertMsg(red_alert.REGISTER_FAIL);\r\n      }\r\n    );\r\n  };\r\n\r\n  const handleInputOnblur = async e => {\r\n    const { name } = e.target;\r\n    switch (name) {\r\n      case CONST.EMAIL:\r\n        checkEmailExist();\r\n        break;\r\n      case CONST.USERNAME:\r\n        checkUsernameExist();\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  const inputList = [\r\n    {\r\n      name: CONST.EMAIL,\r\n      type: \"text\",\r\n      value: email,\r\n      placeholder: CONST.EMAIL_PLACEHOLDER,\r\n      alertMessage: emailAlertMsg,\r\n      inputType: inputType.text_alert\r\n    },\r\n    {\r\n      name: CONST.PASSOWRD,\r\n      type: \"password\",\r\n      value: password,\r\n      placeholder: CONST.PASSWORD_PLACEHOLDER,\r\n      alertMessage: passwordAlertMsg,\r\n      inputType: inputType.text_alert\r\n    },\r\n    {\r\n      name: CONST.CONFIRM_PASSOWRD,\r\n      type: \"password\",\r\n      value: confirmPassword,\r\n      placeholder: CONST.CONFIRM_PASSOWRD_PLACEHOLDER,\r\n      alertMessage: confirmPasswordAlertMsg,\r\n      inputType: inputType.text_alert\r\n    },\r\n    {\r\n      name: CONST.USERNAME,\r\n      type: \"text\",\r\n      value: username,\r\n      placeholder: CONST.USERNAME_PLACEHOLDER,\r\n      alertMessage: usernameAlertMsg,\r\n      inputType: inputType.text_alert\r\n    }\r\n  ];\r\n\r\n  return (\r\n    <AuthLayout\r\n      title={CONST.REGISTER_TITLE}\r\n      link={CONST.LOGIN_LINK}\r\n      linkTo={LOGIN}\r\n      submitButtom={CONST.REGISTER_BUTTON}\r\n      handleSubmit={handleSubmit}\r\n      buttonEnable={\r\n        email && password && password === confirmPassword && username\r\n      }\r\n    >\r\n      <FormInput\r\n        inputList={inputList}\r\n        handleInput={handleInput}\r\n        handleInputOnblur={handleInputOnblur}\r\n      />\r\n    </AuthLayout>\r\n  );\r\n};\r\n\r\nexport default withRouter(RegisterForm);\r\n","import React, { useState } from \"react\";\r\n\r\nimport Layout from \"../Layout\";\r\n\r\nconst Dashboard = () => {\r\n  return <Layout isLogined={true}> \"LOGIN_SUCCESS\"</Layout>;\r\n};\r\n\r\nexport default Dashboard;\r\n","import React from \"react\";\r\nimport \"./style.scss\";\r\n\r\nimport ADD from \"../../utils/image/add.svg\";\r\n\r\nconst AddButton = ({ action, wording }) => {\r\n  return (\r\n    <div\r\n      className=\"addButton_container main_btn btn-sm btn-active flex\"\r\n      onClick={action}\r\n    >\r\n      <img className=\"addButton_img h-full\" src={ADD} />\r\n      {wording}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddButton;\r\n","import React from \"react\";\r\n\r\nimport \"./style.scss\";\r\n\r\nconst PopUp = ({ children }) => {\r\n  return (\r\n    <div className=\"popUp_container fixed inset-0 bg-popUp\">\r\n      <div className=\"popUp w-full h-full relative flex justify-center items-center\">\r\n        {children}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PopUp;\r\n","import React from \"react\";\r\nimport \"./style.scss\";\r\nconst LoadingSpinner = () => {\r\n  return (\r\n    <div className=\"loadingSpinner_container\">\r\n      <div className=\"loadingSpinner\" />\r\n      <div className=\"loadingSpinner\" />\r\n      <div className=\"loadingSpinner\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoadingSpinner;\r\n","import React from \"react\";\r\n\r\nimport { CANCEL } from \"./constants\";\r\n\r\nimport \"./styles.scss\";\r\n\r\nconst FormFooterBtn = ({\r\n  handleLeftOption,\r\n  handleRightOption,\r\n  leftOption,\r\n  rightOption,\r\n  isActive\r\n}) => {\r\n  return (\r\n    <div className=\"form_footer_btn w-full flex justify-between\">\r\n      <span className=\"main_btn btn-cancel\" onClick={handleLeftOption}>\r\n        {leftOption || CANCEL}\r\n      </span>\r\n      <span\r\n        className={`main_btn btn-active${isActive ? \"\" : \" disable\"}`}\r\n        onClick={handleRightOption}\r\n      >\r\n        {rightOption}\r\n      </span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FormFooterBtn;\r\n","export const CANCEL = \"Cancel\";\r\n","export const PROJECT_FORM_CONST = {\r\n  newTitle: \"Add New Project\",\r\n  editTitle: \"Edit Project\",\r\n\r\n  name: \"name\",\r\n  name_placeholder: \"Project Name\",\r\n\r\n  description: \"description\",\r\n  description_placeholder: \"Description\",\r\n\r\n  isPrivate: \"isPrivate\",\r\n  isPrivate_title: \"Is Private ?\",\r\n  private: \"Private\",\r\n  public: \"Public\",\r\n\r\n  newSubmit: \"Add\",\r\n  editSubmit: \"Save\"\r\n};\r\n","import React, { useState } from \"react\";\r\n\r\nimport FormInput from \"../FormInput\";\r\nimport FormFooterBtn from \"../FormFooterBtn\";\r\n\r\nimport { PROJECT_FORM_CONST } from \"./constant\";\r\nimport { inputType } from \"../../utils/configConst\";\r\n\r\nimport \"./style.scss\";\r\n\r\nconst ProjectForm = ({ handleCancel, handleSubmit, errorMsg }) => {\r\n  const [name, setName] = useState(\"\");\r\n  const [description, setDescription] = useState(\"\");\r\n  const [isPrivate, setIsPrivate] = useState(0);\r\n\r\n  const handleSubmitForm = () => {\r\n    handleSubmit({\r\n      name: name,\r\n      description: description,\r\n      isPrivate: parseInt(isPrivate) === 1\r\n    });\r\n  };\r\n\r\n  const handleInput = e => {\r\n    const { name } = e.target;\r\n    const { value } = e.target;\r\n    switch (name) {\r\n      case PROJECT_FORM_CONST.name:\r\n        setName(value);\r\n        break;\r\n      case PROJECT_FORM_CONST.description:\r\n        setDescription(value);\r\n        break;\r\n      case PROJECT_FORM_CONST.isPrivate:\r\n        setIsPrivate(value);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  const inputList = [\r\n    {\r\n      name: PROJECT_FORM_CONST.name,\r\n      type: \"text\",\r\n      value: name,\r\n      placeholder: PROJECT_FORM_CONST.name_placeholder,\r\n      title: PROJECT_FORM_CONST.name_placeholder,\r\n      inputType: inputType.text\r\n    },\r\n    {\r\n      name: PROJECT_FORM_CONST.description,\r\n      title: PROJECT_FORM_CONST.description_placeholder,\r\n      value: description,\r\n      placeholder: PROJECT_FORM_CONST.description_placeholder,\r\n      inputType: inputType.textarea\r\n    },\r\n    {\r\n      name: PROJECT_FORM_CONST.isPrivate,\r\n      title: PROJECT_FORM_CONST.isPrivate_title,\r\n      value: isPrivate,\r\n      option: [PROJECT_FORM_CONST.public, PROJECT_FORM_CONST.private],\r\n      inputType: inputType.radio\r\n    }\r\n  ];\r\n\r\n  return (\r\n    <div className=\"projectForm_container bg-white rounded-4 max-h-full w-full overflow-y-auto text-18\">\r\n      <div className=\"projectForm_title text-20 font-bold\">\r\n        {PROJECT_FORM_CONST.newTitle}\r\n      </div>\r\n      <FormInput inputList={inputList} handleInput={handleInput} />\r\n      <FormFooterBtn\r\n        handleLeftOption={handleCancel}\r\n        handleRightOption={handleSubmitForm}\r\n        rightOption={PROJECT_FORM_CONST.newSubmit}\r\n        isActive={name.length > 0}\r\n      />\r\n      <div className=\"text-red-600\">{errorMsg}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProjectForm;\r\n","export const CONST = {\r\n  title: \" Project : \",\r\n  createAT: \" Create At : \"\r\n};\r\n","import React from \"react\";\r\n\r\nimport PRIVATE_ICON from \"../../utils/image/locked_project.svg\";\r\nimport PUBLIC_ICON from \"../../utils/image/project.svg\";\r\n\r\nimport { CONST } from \"./constant\";\r\nimport \"./style.scss\";\r\n\r\nconst ProjectCard = ({\r\n  id,\r\n  name,\r\n  description,\r\n  create_time,\r\n  isPrivate,\r\n  owner\r\n}) => {\r\n  const createAt = new Date(create_time);\r\n  return (\r\n    <div className=\"projectCard w-full\">\r\n      <div className=\"projectCard_title text-20 font-semibold flex\">\r\n        <img\r\n          className=\"projectCard_icon\"\r\n          src={isPrivate ? PRIVATE_ICON : PUBLIC_ICON}\r\n        />\r\n        {`${CONST.title}${owner}/${name}`}\r\n      </div>\r\n      <div className=\"projectCard_createAt text-16\">\r\n        {`${CONST.createAT}${createAt.toLocaleString()}`}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProjectCard;\r\n","export const FETCH_PROJECTS = \"Projects/FETCH_PROJECTS\";\r\nexport const FETCH_PROJECTS_SUCCESS = \"Projects/FETCH_TASK_SUCCESS\";\r\nexport const FETCH_PROJECTS_BOTTOM = \"Projects/FETCH_PROJECTS_BOTTOM\";\r\n\r\nexport const TOGGLE_NEW_PROJECT_FORM = \"Projects/TOGGLE_NEW_PROJECT_FORM\";\r\nexport const ADD_NEW_PROJECT = \"Projects/ADD_NEW_PROJECT\";\r\nexport const ADD_NEW_PROJECT_SUCCESS = \"Projects/ADD_NEW_PROJECT_SUCCESS\";\r\nexport const ADD_NEW_PROJECT_FAIL = \"Projects/ADD_NEW_PROJECT_FAIL\";\r\n","import api from \"../api\";\r\nimport { apihost } from \"../../configConst\";\r\n\r\nconst ProjectApi = {};\r\n\r\nProjectApi.addNewProject = query => {\r\n  const url = `${\r\n    apihost[process.env.REACT_APP_ENV]\r\n  }/project?sessionId=${localStorage.getItem(\"sessionId\")}`;\r\n  return api.fire({\r\n    url,\r\n    method: \"POST\",\r\n    data: query\r\n  });\r\n};\r\n\r\nProjectApi.getProject = query => {\r\n  const url = `${\r\n    apihost[process.env.REACT_APP_ENV]\r\n  }/project/get?sessionId=${localStorage.getItem(\"sessionId\")}`;\r\n  return api.fire({\r\n    url,\r\n    method: \"POST\",\r\n    data: query\r\n  });\r\n};\r\n\r\nexport default ProjectApi;\r\n","import {\r\n  FETCH_PROJECTS,\r\n  FETCH_PROJECTS_SUCCESS,\r\n  FETCH_PROJECTS_BOTTOM,\r\n  ADD_NEW_PROJECT,\r\n  ADD_NEW_PROJECT_SUCCESS,\r\n  ADD_NEW_PROJECT_FAIL,\r\n  TOGGLE_NEW_PROJECT_FORM\r\n} from \"./constants\";\r\nimport ProjectApi from \"../../utils/api/apifetcher/project\";\r\nimport { red_alert, FETCH_PROJECT_LIMIT } from \"../../utils/configConst\";\r\n\r\nexport const addNewProject = query => dispatch => {\r\n  dispatch({ type: ADD_NEW_PROJECT });\r\n  ProjectApi.addNewProject(query).then(\r\n    res => {\r\n      dispatch({ type: ADD_NEW_PROJECT_SUCCESS, payload: res.data });\r\n    },\r\n    rej => {\r\n      const { response } = rej;\r\n      const { status } = response;\r\n      const errMsg =\r\n        status === 409\r\n          ? red_alert.PROJECT_NAME_REPEATED\r\n          : red_alert.TRY_AGAIN_LATHER;\r\n\r\n      dispatch({ type: ADD_NEW_PROJECT_FAIL, payload: errMsg });\r\n    }\r\n  );\r\n};\r\n\r\nexport const fetchProjects = () => (dispatch, getState) => {\r\n  const { projectTimestamp, isFetchingProject } = getState().ProjectsReducer;\r\n  if (isFetchingProject) return;\r\n  dispatch({ type: FETCH_PROJECTS });\r\n  const query = {\r\n    timestamp: projectTimestamp,\r\n    user_id: localStorage.getItem(\"profileId\"),\r\n    limit: FETCH_PROJECT_LIMIT,\r\n    isOwner: false\r\n  };\r\n  ProjectApi.getProject(query).then(\r\n    res => {\r\n      const { data } = res;\r\n      if (data.length)\r\n        dispatch({ type: FETCH_PROJECTS_SUCCESS, payload: data });\r\n      else dispatch({ type: FETCH_PROJECTS_BOTTOM, payload: data });\r\n    },\r\n    rej => {\r\n      console.log(rej);\r\n    }\r\n  );\r\n};\r\n\r\nexport const toggleNewProjectForm = () => (dispatch, getState) => {\r\n  const { showNewProjectForm } = getState().ProjectsReducer;\r\n  dispatch({ type: TOGGLE_NEW_PROJECT_FORM, payload: !showNewProjectForm });\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector, useStore } from \"react-redux\";\r\n\r\nimport Layout from \"../../components/Layout\";\r\nimport AddButton from \"../../components/AddButton\";\r\nimport PopUp from \"../../components/PopUp\";\r\nimport LoadingSpinner from \"../../components/LoadingSpinner\";\r\nimport ProjectForm from \"../../components/ProjectForm\";\r\nimport ProjectCard from \"../../components/ProjectCard\";\r\n\r\nimport * as actions from \"./actions\";\r\nimport \"./style.scss\";\r\n\r\nconst Projects = () => {\r\n  const { getState } = useStore();\r\n  const dispatch = useDispatch();\r\n  const {\r\n    projectList,\r\n    projectTimestamp,\r\n    isFetchingProject,\r\n    isProjectFetchBottom,\r\n\r\n    isAddingProject,\r\n    showNewProjectForm,\r\n    newProjectErrorMsg\r\n  } = useSelector(state => state.ProjectsReducer);\r\n\r\n  useEffect(() => {\r\n    if (projectTimestamp === null) actions.fetchProjects()(dispatch, getState);\r\n  }, []);\r\n\r\n  const handleScroll = () => {\r\n    if (\r\n      window.innerHeight + Math.ceil(window.scrollY) >=\r\n        document.body.offsetHeight &&\r\n      !isFetchingProject &&\r\n      !isProjectFetchBottom\r\n    ) {\r\n      actions.fetchProjects()(dispatch, getState);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    window.addEventListener(\"scroll\", handleScroll);\r\n    return () => {\r\n      window.removeEventListener(\"scroll\", handleScroll);\r\n    };\r\n  });\r\n\r\n  const toggleNewProjectForm = () => {\r\n    actions.toggleNewProjectForm()(dispatch, getState);\r\n  };\r\n\r\n  const handleSubmit = query => {\r\n    if (!isAddingProject) actions.addNewProject(query)(dispatch);\r\n  };\r\n\r\n  return (\r\n    <Layout isLogined={true}>\r\n      <div className=\"project_container\">\r\n        <AddButton action={toggleNewProjectForm} wording=\"New Project\" />\r\n        <div className=\"project_list\">\r\n          {projectList.map(e => {\r\n            return (\r\n              <ProjectCard\r\n                key={`$projectCard${e.id}`}\r\n                id={e.id}\r\n                name={e.name}\r\n                description={e.description}\r\n                create_time={e.create_time}\r\n                isPrivate={e.isPrivate}\r\n                owner={e.owner}\r\n              />\r\n            );\r\n          })}\r\n          {isFetchingProject ? <LoadingSpinner /> : null}\r\n        </div>\r\n      </div>\r\n      {showNewProjectForm ? (\r\n        <PopUp>\r\n          <ProjectForm\r\n            handleCancel={isAddingProject ? null : toggleNewProjectForm}\r\n            handleSubmit={handleSubmit}\r\n            errorMsg={newProjectErrorMsg}\r\n          />\r\n        </PopUp>\r\n      ) : null}\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default Projects;\r\n","export const FETCH_ISSUE_SUCCESS = \"ISSUE/FETCH_ISSUE_SUCCESS\";\r\n","import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Layout from \"../../components/Layout\";\r\nimport * as actions from \"./actions\";\r\n\r\nconst Issue = () => {\r\n  const issueList = useSelector(state => state.IssueReducer.issueList);\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    actions.fetchIssue()(dispatch);\r\n  }, []);\r\n  return (\r\n    <Layout isLogined={true}>\r\n      <div>test issue reducer : {issueList} </div>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default Issue;\r\n","import { FETCH_ISSUE_SUCCESS } from \"./constants\";\r\n\r\nexport const fetchIssue = () => dispatch => {\r\n  dispatch({ type: FETCH_ISSUE_SUCCESS, payload: [456] });\r\n};\r\n","import React from \"react\";\n\nimport { HashRouter as Router, Route } from \"react-router-dom\";\nimport LoginFrom from \"./components/AuthFrom/LoginForm\";\nimport RegisterFrom from \"./components/AuthFrom/RegisterFrom\";\nimport Dashboard from \"./components/Dashboard\";\nimport Projects from \"./containers/Projects\";\nimport Issue from \"./containers/Issue\";\n\nimport * as PATH from \"./utils/pathConst\";\n\nimport \"./App.css\";\nfunction App() {\n  console.log(process.env);\n  return (\n    <div className=\"App\">\n      <Router basename=\"/\">\n        <Route path={PATH.LOGIN} component={LoginFrom} />\n        <Route path={PATH.REGISTER} component={RegisterFrom} />\n        <Route path={PATH.DASHBOARD} component={Dashboard} />\n        <Route path={PATH.PROJECT} component={Projects} />\n        <Route path={PATH.ISSUE} component={Issue} />\n        <Route path={PATH.SETTING} component={Dashboard} />\n        <Route path=\"/\" exact component={LoginFrom} />\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","import {\r\n  FETCH_PROJECTS,\r\n  FETCH_PROJECTS_SUCCESS,\r\n  FETCH_PROJECTS_BOTTOM,\r\n  ADD_NEW_PROJECT_SUCCESS,\r\n  ADD_NEW_PROJECT_FAIL,\r\n  ADD_NEW_PROJECT,\r\n  TOGGLE_NEW_PROJECT_FORM\r\n} from \"./constants\";\r\n\r\nconst initialState = {\r\n  projectList: [],\r\n  isFetchingProject: false,\r\n  isProjectFetchBottom: false,\r\n  projectTimestamp: null,\r\n\r\n  showNewProjectForm: false,\r\n  newProjectErrorMsg: null,\r\n  isAddingProject: false\r\n};\r\n\r\nexport default function reducer(state = initialState, actions) {\r\n  const { type, payload } = actions;\r\n  const { projectList } = state;\r\n  switch (type) {\r\n    case FETCH_PROJECTS:\r\n      return { ...state, isFetchingProject: true };\r\n    case FETCH_PROJECTS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        projectList: projectList.concat(payload),\r\n        projectTimestamp: payload[payload.length - 1].create_time,\r\n        isFetchingProject: false\r\n      };\r\n    case FETCH_PROJECTS_BOTTOM:\r\n      return {\r\n        ...state,\r\n        isProjectFetchBottom: true,\r\n        isFetchingProject: false\r\n      };\r\n    case TOGGLE_NEW_PROJECT_FORM:\r\n      return {\r\n        ...state,\r\n        showNewProjectForm: payload,\r\n        newProjectErrorMsg: null\r\n      };\r\n    case ADD_NEW_PROJECT:\r\n      return { ...state, isAddingProject: true };\r\n    case ADD_NEW_PROJECT_SUCCESS:\r\n      return {\r\n        ...state,\r\n        isAddingProject: false,\r\n        showNewProjectForm: false,\r\n        projectList: [payload].concat(projectList)\r\n      };\r\n    case ADD_NEW_PROJECT_FAIL:\r\n      return { ...state, isAddingProject: false, newProjectErrorMsg: payload };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { FETCH_ISSUE_SUCCESS } from \"./constants\";\r\n\r\nconst initialState = {\r\n  issueList: []\r\n};\r\n\r\nexport default function reducer(state = initialState, actions) {\r\n  const { type, payload } = actions;\r\n  switch (type) {\r\n    case FETCH_ISSUE_SUCCESS:\r\n      return {\r\n        ...state,\r\n        issueList: state.issueList.concat(payload)\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { AUTH_SUCCESS, AUTH_LOGOUT } from \"./constants\";\r\n\r\nconst initialState = {\r\n  username: \"\"\r\n};\r\n\r\nexport default function reducer(state = initialState, actions) {\r\n  const { type, payload } = actions;\r\n  switch (type) {\r\n    case AUTH_SUCCESS:\r\n      return {\r\n        ...state,\r\n        username: payload.username\r\n      };\r\n    case AUTH_LOGOUT:\r\n      return { ...state, ...initialState };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport ProjectsReducer from \"../containers/Projects/reducer\";\r\nimport IssueReducer from \"../containers/Issue/reducer\";\r\nimport AuthReducer from \"../containers/Auth/reducer\";\r\n\r\nexport default combineReducers({ ProjectsReducer, AuthReducer, IssueReducer });\r\n","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport ReduxPromise from \"redux-promise\";\r\nimport ReduxThunk from \"redux-thunk\";\r\n\r\nimport reducers from \"../reducers\";\r\n\r\n/**\r\n * Inject middle-ware to enhance redux store.\r\n */\r\nfunction enhancer() {\r\n  const middlewares = [ReduxThunk, ReduxPromise];\r\n  return compose(applyMiddleware(...middlewares));\r\n}\r\n\r\n/**\r\n * Define the global store to handle all application data\r\n *\r\n * In redux app, there should be only one store in whole application.\r\n */\r\nconst generateStore = () => {\r\n  const store = createStore(reducers, enhancer());\r\n  return store;\r\n};\r\n\r\nconst store = generateStore();\r\nexport default store;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n  // [::1] is the IPv6 localhost address.\r\n  window.location.hostname === '[::1]' ||\r\n  // 127.0.0.1/8 is considered localhost for IPv4.\r\n  window.location.hostname.match(\r\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n  )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.REACT_APP_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n            'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}