{"version":3,"sources":["utils/image/locked_project.svg","utils/image/project.svg","utils/image/add.svg","components/TextInput/index.js","utils/configConst.js","components/FormInput/index.js","utils/api/api.js","utils/api/apifetcher/profile.js","containers/Auth/constants.js","containers/Auth/actions.js","utils/api/apifetcher/auth.js","utils/pathConst.js","components/Layout/Header/index.js","components/Layout/NavSideBar/constants.js","components/Layout/NavSideBar/index.js","components/Layout/index.js","components/AuthFrom/AuthLayout.js","components/AuthFrom/LoginForm.js","components/AuthFrom/constents.js","components/AuthFrom/RegisterFrom.js","components/Dashboard/index.js","components/AddButton/index.js","components/LoadingSpinner/index.js","components/FormFooterBtn/index.js","components/FormFooterBtn/constants.js","components/IssueForm/constant.js","components/IssueForm/index.js","components/PopUp/index.js","containers/ProjectDetail/constants.js","utils/generalUtils.js","containers/ProjectDetail/DetailTab/index.js","components/IssueCard/index.js","utils/api/apifetcher/project.js","utils/api/apifetcher/issue.js","containers/ProjectDetail/IssueTab/index.js","containers/ProjectDetail/actions.js","containers/ProjectDetail/index.js","components/ProjectForm/constant.js","components/ProjectForm/index.js","components/ProjectCard/constant.js","components/ProjectCard/index.js","containers/Projects/constants.js","containers/Projects/actions.js","containers/Projects/index.js","containers/Issue/constants.js","containers/Issue/index.js","containers/Issue/actions.js","App.js","containers/Projects/reducer.js","containers/Issue/reducer.js","containers/Auth/reducer.js","containers/ProjectDetail/reducer.js","reducers/index.js","store/index.js","serviceWorker.js","index.js"],"names":["module","exports","TextInput","type","name","onChange","value","placeholder","onblur","alertMessage","className","onBlur","apihost","red_alert","STATE_OPTION","SEVERITY_OPTION","PRIORITY_OPTION","inputType","FormInput","handleInput","inputList","handleInputOnblur","Fragment","map","e","key","title","option","radioOption","index","isChecked","parseInt","checked","optionPlaceHolder","i","axios","defaults","headers","post","api","instance","create","timeout","onUploadProgress","progressEvent","document","body","style","cursor","loaded","total","fire","a","options","request","ProfileAPI","url","localStorage","getItem","method","profileId","AUTH_SUCCESS","AUTH_LOGOUT","authSuccess","data","dispatch","payload","username","sessionId","setItem","logout","removeItem","AuthAPI","query","email","LOGIN","REGISTER","DASHBOARD","PROJECT","ISSUE","SETTING","PROJECT_DETIAL","withRouter","props","useDispatch","useSelector","state","AuthReducer","to","PATH","onClick","action","history","push","SIDE_BAR_ITEMS","path","NavSideBar","item","isLogined","children","useEffect","actions","getMyProfile","then","res","AuthLayout","linkTo","link","buttonEnable","handleSubmit","submitButtom","useState","setEmail","emailAlertMsg","setEmailAlertMsg","password","setPassword","passwordAlertMsg","setPasswordAlertMsg","login","sha256","rej","response","status","target","confirmPassword","setConfirmPassword","confirmPasswordAlertMsg","setUsername","usernameAlertMsg","setUsernameAlertMsg","checkEmailExist","verifyEmail","checkUsernameExist","verifyUsername","handleRegister","register","Dashboard","AddButton","wording","src","ADD","LoadingSpinner","FormFooterBtn","handleLeftOption","handleRightOption","leftOption","rightOption","isActive","ISSUE_FORM_CONST","IssueForm","handleCancel","errorMsg","setName","description","setDescription","setState","severity","setSeverity","priority","setPriority","isReproducible","setIsReproducible","length","PopUp","FETCH_PROJECT_DETAIL","FETCH_PROJECT_DETAIL_SUCCESS","FETCH_PROJECT_DETAIL_FAIL","TOGGLE_NEW_ISSUE_FORM","ADD_NEW_ISSUE","ADD_NEW_ISSUE_SUCCESS","ADD_NEW_ISSUE_FAIL","FETCH_PROJECT_ISSUE","FETCH_PROJECT_ISSUE_SUCCESS","FETCH_PROJECT_ISSUE_FAIL","FETCH_PROJECT_ISSUE_BOTTOM","CONST","TAB","toLocalTime","timestamp","Date","toLocaleString","DetailTab","projectDetail","create_time","finish_issue_count","issue_count","isPrivate","member_count","owner","tag_count","IssueCard","id","ReportUser","projectId","ProjectApi","IssueAPI","IssueTab","ProjectDetailReducer","projectIssueList","isFetchingProjectIssue","isProjectIssueFetchBottom","projectIssueTimestamp","handleFetchIssue","timeStamp","limit","IssueApi","getIssueByProjectId","handleScroll","window","innerHeight","Math","ceil","scrollY","offsetHeight","addEventListener","removeEventListener","ProjectDetail","useParams","user","project","tab","URLSearchParams","useLocation","search","get","isFetchingProjectDetail","showNewIssueForm","newIssueErrorMsg","isAddingIssue","fetchProjectDetailError","loadedProfile","getProjectDetail","toggleNewIssueForm","renderMainContent","addNewIssue","PROJECT_FORM_CONST","ProjectForm","setIsPrivate","ProjectCard","PRIVATE_ICON","PUBLIC_ICON","FETCH_PROJECTS","FETCH_PROJECTS_SUCCESS","FETCH_PROJECTS_BOTTOM","TOGGLE_NEW_PROJECT_FORM","ADD_NEW_PROJECT","ADD_NEW_PROJECT_SUCCESS","ADD_NEW_PROJECT_FAIL","fetchProjects","projectTimestamp","user_id","isOwner","getProject","console","log","Projects","ProjectsReducer","projectList","isFetchingProject","isProjectFetchBottom","isAddingProject","showNewProjectForm","newProjectErrorMsg","toggleNewProjectForm","addNewProject","FETCH_ISSUE_SUCCESS","Issue","issueList","IssueReducer","App","version","process","basename","component","LoginFrom","RegisterFrom","exact","initialState","combineReducers","concat","store","createStore","reducers","middlewares","ReduxThunk","ReduxPromise","compose","applyMiddleware","enhancer","Boolean","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3705be02.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/locked_project.cdd8dc1e.svg\";","module.exports = __webpack_public_path__ + \"static/media/project.54e467ef.svg\";","module.exports = __webpack_public_path__ + \"static/media/add.151f63a5.svg\";","import React from \"react\";\r\n\r\nimport \"./style.scss\";\r\n\r\nconst TextInput = ({\r\n  type,\r\n  name,\r\n  onChange,\r\n  value,\r\n  placeholder,\r\n  onblur,\r\n  alertMessage\r\n}) => {\r\n  return (\r\n    <div>\r\n      <input\r\n        className=\"text_input w-full border-b-2\"\r\n        type={type}\r\n        name={name}\r\n        onChange={onChange}\r\n        value={value}\r\n        placeholder={placeholder}\r\n        onBlur={onblur}\r\n      />\r\n      <div className=\"text_input_alert text-14 text-red-600\">\r\n        {alertMessage}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TextInput;\r\n","export const apihost = {\r\n  local: \"http://127.0.0.1:8080\",\r\n  dev: \"https://its-api.herokuapp.com\",\r\n  prod: \"https://its-api.herokuapp.com\"\r\n};\r\n\r\nexport const FETCH_PROJECT_LIMIT = 15;\r\nexport const FETCH_ISSUE_LIMIT = 15;\r\n\r\nexport const HIT_BOTTOM = \"You already hit the bottom !\";\r\n\r\nexport const red_alert = {\r\n  LOGIN_EMAIL_NOT_EXIST:\r\n    \"We don't recognize this email, please sign up to get started\",\r\n  LOGIN_FAIL: \"Login fail. Please try again\",\r\n  REGISTER_FAIL: \"Register fail. Please try again\",\r\n\r\n  REGISTER_EMAIL_EXIST: \"This email address is already in use\",\r\n  REGISTER_USERNAME_EXIST: \"This username is already in use\",\r\n\r\n  TRY_AGAIN_LATHER: \"Something when wrong. Please try again later.\",\r\n  PROJECT_NAME_REPEATED: \"Project name repeated.\",\r\n\r\n  NOT_FOUND: \"404 NOT FOUND\"\r\n};\r\n\r\nexport const STATE_OPTION = [\"s1\", \"s2\", \"s3\", \"s4\", \"s5\"];\r\nexport const SEVERITY_OPTION = [\"se1\", \"se2\", \"se3\", \"se4\", \"se5\"];\r\nexport const PRIORITY_OPTION = [\"p1\", \"p2\", \"p3\", \"p4\", \"p5\"];\r\n\r\nexport const inputType = {\r\n  text_alert: \"text_alert\",\r\n  text: \"text\",\r\n  textarea: \"textarea\",\r\n  radio: \"radio\",\r\n  select: \"select\"\r\n};\r\n","import React from \"react\";\r\n\r\nimport TextInput from \"../TextInput\";\r\n\r\nimport { inputType } from \"../../utils/configConst\";\r\n\r\nimport \"./style.scss\";\r\n\r\nconst FormInput = ({ handleInput, inputList, handleInputOnblur }) => {\r\n  return (\r\n    <React.Fragment>\r\n      {inputList.map(e => {\r\n        const renderInput = () => {\r\n          if (e.inputType === inputType.text_alert)\r\n            return (\r\n              <TextInput\r\n                name={e.name}\r\n                type={e.type}\r\n                onChange={handleInput}\r\n                value={e.value}\r\n                placeholder={e.placeholder}\r\n                alertMessage={e.alertMessage}\r\n                onblur={handleInputOnblur}\r\n              />\r\n            );\r\n          if (e.inputType === inputType.text)\r\n            return (\r\n              <input\r\n                className=\"formInput_text w-full\"\r\n                name={e.name}\r\n                type={e.type}\r\n                onChange={handleInput}\r\n                value={e.value}\r\n                placeholder={e.placeholder}\r\n                onBlur={handleInputOnblur}\r\n              />\r\n            );\r\n          if (e.inputType === inputType.textarea) {\r\n            return (\r\n              <textarea\r\n                className=\"formInput_textarea w-full\"\r\n                name={e.name}\r\n                onChange={handleInput}\r\n                value={e.value}\r\n                placeholder={e.placeholder}\r\n              />\r\n            );\r\n          }\r\n          if (e.inputType === inputType.radio) {\r\n            return (\r\n              <div className=\"formInput_radio_container flex flex-wrap\">\r\n                {e.option.map((radioOption, index) => {\r\n                  const isChecked = index === parseInt(e.value);\r\n                  return (\r\n                    <div\r\n                      key={`formInput_radio${radioOption}${index}`}\r\n                      className=\"formInput_radio_layout flex relative\"\r\n                    >\r\n                      <div\r\n                        className={`formInput_radio  rounded-full border-main border-solid ${\r\n                          isChecked ? \"border-5 bg-white\" : \"border-2\"\r\n                        }`}\r\n                      >\r\n                        <input\r\n                          className=\"absolute top-0 left-0 w-full h-full opacity-0\"\r\n                          type=\"radio\"\r\n                          name={e.name}\r\n                          value={index}\r\n                          checked={isChecked}\r\n                          onChange={handleInput}\r\n                        />\r\n                      </div>\r\n                      {radioOption}\r\n                    </div>\r\n                  );\r\n                })}\r\n                <br />\r\n              </div>\r\n            );\r\n          }\r\n          if (e.inputType === inputType.select) {\r\n            return (\r\n              <select name={e.name} onChange={handleInput} value={e.value}>\r\n                {e.option.map((optionPlaceHolder, i) => {\r\n                  return (\r\n                    <option\r\n                      value={i}\r\n                      key={`${e.name}_${i}_${optionPlaceHolder}`}\r\n                    >\r\n                      {optionPlaceHolder}\r\n                    </option>\r\n                  );\r\n                })}\r\n              </select>\r\n            );\r\n          }\r\n          return \"\";\r\n        };\r\n        return (\r\n          <React.Fragment key={`formInput${e.name}`}>\r\n            {e.title ? (\r\n              <div className=\"formInput_title font-semibold\">{e.title}</div>\r\n            ) : null}\r\n            {renderInput()}\r\n          </React.Fragment>\r\n        );\r\n      })}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default FormInput;\r\n","import axios from \"axios\";\r\n\r\naxios.defaults.headers.post[\"Content-Type\"] = \"application/json\";\r\n\r\nconst api = {};\r\nexport const instance = axios.create({\r\n  timeout: 5000,\r\n  onUploadProgress: progressEvent => {\r\n    document.body.style.cursor =\r\n      progressEvent.loaded === progressEvent.total ? \"default\" : \"progress\";\r\n  }\r\n});\r\n\r\napi.fire = async options => {\r\n  return instance.request(options);\r\n};\r\n\r\nexport default api;\r\n","import api from \"../api\";\r\nimport { apihost } from \"../../configConst\";\r\n\r\nconst ProfileAPI = {};\r\n\r\nProfileAPI.getMyProfile = () => {\r\n  const url = `${\r\n    apihost[process.env.REACT_APP_ENV]\r\n    }/profile/me?sessionId=${localStorage.getItem(\r\n      \"sessionId\"\r\n    )}&profileId=${localStorage.getItem(\"profileId\")}`;\r\n  return api.fire({\r\n    url,\r\n    method: \"GET\"\r\n  });\r\n};\r\n\r\nProfileAPI.getProfileById = profileId => {\r\n  const url = `${apihost[process.env.REACT_APP_ENV]}/profile?profileId=${profileId}`;\r\n  return api.fire({\r\n    url,\r\n    method: \"GET\"\r\n  });\r\n};\r\n\r\nexport default ProfileAPI;\r\n","export const AUTH_SUCCESS = \"Auth/AUTH_SUCCESS\";\r\nexport const AUTH_LOGOUT = \"Auth/AUTH_LOGOUT\";\r\n","import { AUTH_SUCCESS, AUTH_LOGOUT } from \"./constants\";\r\n\r\nexport const authSuccess = data => dispatch => {\r\n  const payload = {\r\n    username: data.username\r\n  };\r\n  if (data.sessionId) localStorage.setItem(\"sessionId\", data.sessionId);\r\n  if (data.profileId === 0 || data.profileId)\r\n    localStorage.setItem(\"profileId\", data.profileId);\r\n  dispatch({ type: AUTH_SUCCESS, payload });\r\n};\r\n\r\nexport const logout = () => dispatch => {\r\n  localStorage.removeItem(\"sessionId\");\r\n  localStorage.removeItem(\"profileId\");\r\n  dispatch({ type: AUTH_LOGOUT });\r\n};\r\n","import api from \"../api\";\r\nimport { apihost } from \"../../configConst\";\r\n\r\nconst AuthAPI = {};\r\n\r\nAuthAPI.register = query => {\r\n  const url = `${apihost[process.env.REACT_APP_ENV]}/session`;\r\n  return api.fire({\r\n    url,\r\n    method: \"POST\",\r\n    data: query\r\n  });\r\n};\r\n\r\nAuthAPI.login = query => {\r\n  const url = `${apihost[process.env.REACT_APP_ENV]}/session/login`;\r\n  return api.fire({\r\n    url,\r\n    method: \"POST\",\r\n    data: query\r\n  });\r\n};\r\n\r\nAuthAPI.logout = () => {\r\n  const url = `${\r\n    apihost[process.env.REACT_APP_ENV]\r\n    }/session/logout?sessionId=${localStorage.getItem(\"sessionId\")}`;\r\n  return api.fire({\r\n    url,\r\n    method: \"DELETE\"\r\n  });\r\n};\r\n\r\nAuthAPI.verifyEmail = email => {\r\n  const url = `${\r\n    apihost[process.env.REACT_APP_ENV]\r\n    }/session/verify/email?email=${email}`;\r\n  return api.fire({\r\n    url,\r\n    method: \"GET\"\r\n  });\r\n};\r\n\r\nAuthAPI.verifyUsername = username => {\r\n  const url = `${\r\n    apihost[process.env.REACT_APP_ENV]\r\n    }/session/verify/username?username=${username}`;\r\n  return api.fire({\r\n    url,\r\n    method: \"GET\"\r\n  });\r\n};\r\n\r\nexport default AuthAPI;\r\n","export const LOGIN = \"/login\";\r\nexport const REGISTER = \"/register\";\r\nexport const DASHBOARD = \"/dashboard\";\r\nexport const PROJECT = \"/project\";\r\nexport const ISSUE = \"/issue\";\r\nexport const SETTING = \"/setting\";\r\nexport const PROFILE = \"/:user\";\r\nexport const PROJECT_DETIAL = \"/p/:user/:project\";\r\nexport const PROJECT_DETIAL_LINK = (user, project) => `/p/${user}/${project}`;\r\n","import React from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport AuthAPI from \"../../../utils/api/apifetcher/auth\";\r\n\r\nimport * as action from \"../../../containers/Auth/actions\";\r\nimport * as PATH from \"../../../utils/pathConst\";\r\n\r\nimport \"./header.scss\";\r\n\r\nconst Header = props => {\r\n  const dispatch = useDispatch();\r\n  const { username } = useSelector(state => state.AuthReducer);\r\n\r\n  const handleLogout = () => {\r\n    AuthAPI.logout();\r\n    action.logout()(dispatch);\r\n    props.history.push(\"/login\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"header flex justify-between items-center bg-blue-500 sticky top-0\">\r\n      <div className=\"text-28\">\r\n        <Link to={PATH.DASHBOARD}>ITS</Link>\r\n      </div>\r\n      <div className=\"header_link_container flex text-16\">\r\n        <div className=\"header_link\">{`Hi ${username}`}</div>\r\n        <div className=\"header_link cursor-pointer\" onClick={handleLogout}>\r\n          Logout\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withRouter(Header);\r\n","import { DASHBOARD, PROJECT, ISSUE } from \"../../../utils/pathConst\";\r\n\r\nexport const SIDE_BAR_ITEMS = [\r\n  { name: \"Dashboard\", path: DASHBOARD },\r\n  { name: \"Projects\", path: PROJECT },\r\n  { name: \"Issue\", path: ISSUE }\r\n];\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { SIDE_BAR_ITEMS } from \"./constants\";\r\nimport \"./index.scss\";\r\n\r\nconst NavSideBar = props => {\r\n  return (\r\n    <div className=\"nav_sidebar bg-333\">\r\n      <div className=\"nav_sidebar_container fixed flex flex-col\">\r\n        {SIDE_BAR_ITEMS.map(item => (\r\n          <Link\r\n            key={`sliderBar_${item.name}`}\r\n            className=\"nav_sidebar_link text-white font-bold\"\r\n            to={item.path}\r\n          >\r\n            {item.name}\r\n          </Link>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NavSideBar;\r\n","import React, { useEffect } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport ProfileAPI from \"../../utils/api/apifetcher/profile\";\r\n\r\nimport * as actions from \"../../containers/Auth/actions\";\r\n\r\nimport Header from \"./Header\";\r\nimport NavSideBar from \"./NavSideBar\";\r\n\r\nconst Layout = ({ isLogined, history, children }) => {\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    if (isLogined) {\r\n      if (!localStorage.getItem(\"sessionId\")) {\r\n        actions.logout()(dispatch);\r\n        history.push(\"/login\");\r\n        return;\r\n      }\r\n      ProfileAPI.getMyProfile().then(\r\n        res => {\r\n          actions.authSuccess(res.data)(dispatch);\r\n        },\r\n        () => {\r\n          actions.logout()(dispatch);\r\n          history.push(\"/login\");\r\n          return;\r\n        }\r\n      );\r\n    } else {\r\n      if (localStorage.getItem(\"sessionId\")) {\r\n        history.push(\"/dashboard\");\r\n        return;\r\n      }\r\n    }\r\n  }, []);\r\n  return (\r\n    <div className=\"layout min-h-screen flex flex-col\">\r\n      {isLogined ? (\r\n        <React.Fragment>\r\n          <Header />\r\n          <div className=\"flex flex-grow\">\r\n            <NavSideBar />\r\n            {children}\r\n          </div>\r\n        </React.Fragment>\r\n      ) : (\r\n        children\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withRouter(Layout);\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Layout from \"../Layout\";\r\n\r\nimport \"./auth.scss\";\r\n\r\nconst AuthLayout = ({\r\n  title,\r\n  children,\r\n  linkTo,\r\n  link,\r\n  buttonEnable,\r\n  handleSubmit,\r\n  submitButtom\r\n}) => {\r\n  return (\r\n    <Layout isLogined={false}>\r\n      <div className=\"auth_layout text-18 flex justify-center items-center w-full h-full min-h-screen bg-blue-400\">\r\n        <div className=\"auth_form mx-auto w-full bg-white rounded\">\r\n          <div className=\"auth_form_title text-blue-600 text-28 inline-block\">\r\n            {title}\r\n          </div>\r\n          {children}\r\n          <Link\r\n            className=\"auth_bottom_link text-blue-600 text-14 block\"\r\n            to={linkTo}\r\n          >\r\n            {link}\r\n          </Link>\r\n          <span\r\n            className={`main_btn btn-active btn-sm inline-block${\r\n              buttonEnable ? \"\" : \" disable\"\r\n            }`}\r\n            onClick={handleSubmit}\r\n          >\r\n            {submitButtom}\r\n          </span>\r\n        </div>\r\n      </div>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default AuthLayout;\r\n","import React, { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nimport FormInput from \"../FormInput\";\r\nimport AuthLayout from \"./AuthLayout\";\r\n\r\nimport * as CONST from \"./constents\";\r\nimport { red_alert, inputType } from \"../../utils/configConst\";\r\nimport { REGISTER } from \"../../utils/pathConst\";\r\n\r\nimport AuthAPI from \"../../utils/api/apifetcher/auth\";\r\nimport * as actions from \"../../containers/Auth/actions\";\r\nimport sha256 from \"sha256\";\r\n\r\nconst LoginForm = props => {\r\n  const dispatch = useDispatch();\r\n\r\n  const [email, setEmail] = useState(\"\");\r\n  const [emailAlertMsg, setEmailAlertMsg] = useState(\"\");\r\n\r\n  const [password, setPassword] = useState(\"\");\r\n  const [passwordAlertMsg, setPasswordAlertMsg] = useState(\"\");\r\n\r\n  const handleInput = e => {\r\n    const { name } = e.target;\r\n    const { value } = e.target;\r\n    switch (name) {\r\n      case CONST.EMAIL:\r\n        setEmail(value);\r\n        break;\r\n      case CONST.PASSOWRD:\r\n        setPassword(value);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    AuthAPI.login({ email, password: sha256(password) }).then(\r\n      res => {\r\n        const { data } = res;\r\n        actions.authSuccess(data)(dispatch);\r\n        props.history.push(\"/dashboard\");\r\n      },\r\n      rej => {\r\n        const { status } = rej.response;\r\n        switch (status) {\r\n          case 401:\r\n            setPasswordAlertMsg(red_alert.LOGIN_FAIL);\r\n            setEmailAlertMsg(\"\");\r\n            break;\r\n          case 404:\r\n            setPasswordAlertMsg(\"\");\r\n            setEmailAlertMsg(red_alert.LOGIN_EMAIL_NOT_EXIST);\r\n            break;\r\n          default:\r\n            setPasswordAlertMsg(red_alert.LOGIN_FAIL);\r\n            setEmailAlertMsg(\"\");\r\n            break;\r\n        }\r\n      }\r\n    );\r\n  };\r\n  const handleInputOnblur = e => {};\r\n  const inputList = [\r\n    {\r\n      name: CONST.EMAIL,\r\n      type: \"text\",\r\n      value: email,\r\n      placeholder: CONST.EMAIL_PLACEHOLDER,\r\n      alertMessage: emailAlertMsg,\r\n      inputType: inputType.text_alert\r\n    },\r\n    {\r\n      name: CONST.PASSOWRD,\r\n      type: \"password\",\r\n      value: password,\r\n      placeholder: CONST.PASSWORD_PLACEHOLDER,\r\n      alertMessage: passwordAlertMsg,\r\n      inputType: inputType.text_alert\r\n    }\r\n  ];\r\n\r\n  return (\r\n    <AuthLayout\r\n      title={CONST.LOGIN_TITLE}\r\n      link={CONST.REGISTER_LINK}\r\n      linkTo={REGISTER}\r\n      submitButtom={CONST.LOGIN_BUTTON}\r\n      handleSubmit={handleSubmit}\r\n      buttonEnable={email && password}\r\n    >\r\n      <FormInput\r\n        inputList={inputList}\r\n        handleInput={handleInput}\r\n        handleInputOnblur={handleInputOnblur}\r\n      />\r\n    </AuthLayout>\r\n  );\r\n};\r\n\r\nexport default withRouter(LoginForm);\r\n","export const LOGIN_TITLE = \"Login\";\r\nexport const REGISTER_TITLE = \"Register\";\r\n\r\nexport const LOGIN_BUTTON = \"Login\";\r\nexport const REGISTER_BUTTON = \"Register\";\r\n\r\nexport const EMAIL = \"email\";\r\nexport const PASSOWRD = \"password\";\r\nexport const CONFIRM_PASSOWRD = \"confirm_username\";\r\nexport const USERNAME = \"username\";\r\n\r\nexport const EMAIL_PLACEHOLDER = \"Email\";\r\nexport const PASSWORD_PLACEHOLDER = \"Password\";\r\nexport const CONFIRM_PASSOWRD_PLACEHOLDER = \"Confirm passowrd\";\r\nexport const USERNAME_PLACEHOLDER = \"Username\";\r\n\r\nexport const REGISTER_LINK = \"Don't have an account? Sign up now!\";\r\n\r\nexport const LOGIN_LINK = \"Already have an account? Log in now!\";\r\n","import React, { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nimport FormInput from \"../FormInput\";\r\nimport AuthLayout from \"./AuthLayout\";\r\n\r\nimport * as CONST from \"./constents\";\r\nimport { red_alert, inputType } from \"../../utils/configConst\";\r\nimport { LOGIN } from \"../../utils/pathConst\";\r\n\r\nimport AuthAPI from \"../../utils/api/apifetcher/auth\";\r\nimport * as actions from \"../../containers/Auth/actions\";\r\nimport sha256 from \"sha256\";\r\n\r\nconst RegisterForm = props => {\r\n  const dispatch = useDispatch();\r\n\r\n  const [email, setEmail] = useState(\"\");\r\n  const [emailAlertMsg, setEmailAlertMsg] = useState(\"\");\r\n\r\n  const [password, setPassword] = useState(\"\");\r\n  const [passwordAlertMsg, setPasswordAlertMsg] = useState(\"\");\r\n\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n  const [confirmPasswordAlertMsg, setConfirmPasswordAlertMsg] = useState(\"\");\r\n\r\n  const [username, setUsername] = useState(\"\");\r\n  const [usernameAlertMsg, setUsernameAlertMsg] = useState(\"\");\r\n\r\n  const handleInput = e => {\r\n    const { name } = e.target;\r\n    const { value } = e.target;\r\n    switch (name) {\r\n      case CONST.EMAIL:\r\n        setEmail(value);\r\n        break;\r\n      case CONST.PASSOWRD:\r\n        setPassword(value);\r\n        break;\r\n      case CONST.CONFIRM_PASSOWRD:\r\n        setConfirmPassword(value);\r\n        break;\r\n      case CONST.USERNAME:\r\n        setUsername(value);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  const checkEmailExist = () => {\r\n    if (!email) {\r\n      setEmailAlertMsg(\"\");\r\n      return false;\r\n    }\r\n    return AuthAPI.verifyEmail(email).then(\r\n      () => {\r\n        setEmailAlertMsg(red_alert.REGISTER_EMAIL_EXIST);\r\n        return false;\r\n      },\r\n      () => {\r\n        setEmailAlertMsg(\"\");\r\n        return true;\r\n      }\r\n    );\r\n  };\r\n\r\n  const checkUsernameExist = () => {\r\n    if (!username) {\r\n      setUsernameAlertMsg(\"\");\r\n      return false;\r\n    }\r\n    return AuthAPI.verifyUsername(username).then(\r\n      () => {\r\n        setUsernameAlertMsg(red_alert.REGISTER_USERNAME_EXIST);\r\n        return false;\r\n      },\r\n      () => {\r\n        setUsernameAlertMsg(\"\");\r\n        return true;\r\n      }\r\n    );\r\n  };\r\n\r\n  const handleSubmit = async e => {\r\n    if ((await checkEmailExist()) && (await checkUsernameExist())) {\r\n      handleRegister();\r\n    }\r\n  };\r\n\r\n  const handleRegister = () => {\r\n    AuthAPI.register({ email, password: sha256(password), username }).then(\r\n      res => {\r\n        const { data } = res;\r\n\r\n        actions.authSuccess(data)(dispatch);\r\n        props.history.push(\"/dashboard\");\r\n      },\r\n      rej => {\r\n        setUsernameAlertMsg(red_alert.REGISTER_FAIL);\r\n      }\r\n    );\r\n  };\r\n\r\n  const handleInputOnblur = async e => {\r\n    const { name } = e.target;\r\n    switch (name) {\r\n      case CONST.EMAIL:\r\n        checkEmailExist();\r\n        break;\r\n      case CONST.USERNAME:\r\n        checkUsernameExist();\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  const inputList = [\r\n    {\r\n      name: CONST.EMAIL,\r\n      type: \"text\",\r\n      value: email,\r\n      placeholder: CONST.EMAIL_PLACEHOLDER,\r\n      alertMessage: emailAlertMsg,\r\n      inputType: inputType.text_alert\r\n    },\r\n    {\r\n      name: CONST.PASSOWRD,\r\n      type: \"password\",\r\n      value: password,\r\n      placeholder: CONST.PASSWORD_PLACEHOLDER,\r\n      alertMessage: passwordAlertMsg,\r\n      inputType: inputType.text_alert\r\n    },\r\n    {\r\n      name: CONST.CONFIRM_PASSOWRD,\r\n      type: \"password\",\r\n      value: confirmPassword,\r\n      placeholder: CONST.CONFIRM_PASSOWRD_PLACEHOLDER,\r\n      alertMessage: confirmPasswordAlertMsg,\r\n      inputType: inputType.text_alert\r\n    },\r\n    {\r\n      name: CONST.USERNAME,\r\n      type: \"text\",\r\n      value: username,\r\n      placeholder: CONST.USERNAME_PLACEHOLDER,\r\n      alertMessage: usernameAlertMsg,\r\n      inputType: inputType.text_alert\r\n    }\r\n  ];\r\n\r\n  return (\r\n    <AuthLayout\r\n      title={CONST.REGISTER_TITLE}\r\n      link={CONST.LOGIN_LINK}\r\n      linkTo={LOGIN}\r\n      submitButtom={CONST.REGISTER_BUTTON}\r\n      handleSubmit={handleSubmit}\r\n      buttonEnable={\r\n        email && password && password === confirmPassword && username\r\n      }\r\n    >\r\n      <FormInput\r\n        inputList={inputList}\r\n        handleInput={handleInput}\r\n        handleInputOnblur={handleInputOnblur}\r\n      />\r\n    </AuthLayout>\r\n  );\r\n};\r\n\r\nexport default withRouter(RegisterForm);\r\n","import React, { useState } from \"react\";\r\n\r\nimport Layout from \"../Layout\";\r\n\r\nconst Dashboard = () => {\r\n  return (\r\n    <Layout isLogined={true}>\r\n      <div className=\"w-full\"> \"LOGIN_SUCCESS\"</div>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n","import React from \"react\";\r\nimport \"./style.scss\";\r\n\r\nimport ADD from \"../../utils/image/add.svg\";\r\n\r\nconst AddButton = ({ action, wording }) => {\r\n  return (\r\n    <div\r\n      className=\"addButton_container main_btn btn-sm btn-active flex\"\r\n      onClick={action}\r\n    >\r\n      <img className=\"addButton_img h-full\" src={ADD} />\r\n      {wording}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddButton;\r\n","import React from \"react\";\r\nimport \"./style.scss\";\r\nconst LoadingSpinner = () => {\r\n  return (\r\n    <div className=\"loadingSpinner_container\">\r\n      <div className=\"loadingSpinner\" />\r\n      <div className=\"loadingSpinner\" />\r\n      <div className=\"loadingSpinner\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoadingSpinner;\r\n","import React from \"react\";\r\n\r\nimport { CANCEL } from \"./constants\";\r\n\r\nimport \"./styles.scss\";\r\n\r\nconst FormFooterBtn = ({\r\n  handleLeftOption,\r\n  handleRightOption,\r\n  leftOption,\r\n  rightOption,\r\n  isActive\r\n}) => {\r\n  return (\r\n    <div className=\"form_footer_btn w-full flex justify-between\">\r\n      <span className=\"main_btn btn-cancel\" onClick={handleLeftOption}>\r\n        {leftOption || CANCEL}\r\n      </span>\r\n      <span\r\n        className={`main_btn btn-active${isActive ? \"\" : \" disable\"}`}\r\n        onClick={handleRightOption}\r\n      >\r\n        {rightOption}\r\n      </span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FormFooterBtn;\r\n","export const CANCEL = \"Cancel\";\r\n","export const ISSUE_FORM_CONST = {\r\n  newTitle: \"Add New Project\",\r\n  editTitle: \"Edit Project\",\r\n\r\n  name: \"name\",\r\n  name_placeholder: \"Issue title\",\r\n\r\n  description: \"description\",\r\n  description_placeholder: \"Description\",\r\n\r\n  state: \"state\",\r\n  state_title: \"Issue state\",\r\n\r\n  severity: \"severity\",\r\n  severity_title: \"Issue severity\",\r\n\r\n  priority: \"priority\",\r\n  priority_title: \"Issue priority\",\r\n\r\n  isReproducible: \"isReproducible\",\r\n  isReproducible_title: \"Is Reproducible\",\r\n  yes: \"Yes\",\r\n  no: \"No\",\r\n\r\n  newSubmit: \"Add\",\r\n  editSubmit: \"Save\"\r\n};\r\n","import React, { useState } from \"react\";\r\n\r\nimport FormInput from \"../FormInput\";\r\nimport FormFooterBtn from \"../FormFooterBtn\";\r\n\r\nimport { ISSUE_FORM_CONST } from \"./constant\";\r\nimport {\r\n  inputType,\r\n  STATE_OPTION,\r\n  SEVERITY_OPTION,\r\n  PRIORITY_OPTION\r\n} from \"../../utils/configConst\";\r\n\r\nimport \"./style.scss\";\r\n\r\nconst IssueForm = ({ handleCancel, handleSubmit, errorMsg }) => {\r\n  const [name, setName] = useState(\"\");\r\n  const [description, setDescription] = useState(\"\");\r\n  const [state, setState] = useState(0);\r\n  const [severity, setSeverity] = useState(0);\r\n  const [priority, setPriority] = useState(0);\r\n  const [isReproducible, setIsReproducible] = useState(0);\r\n\r\n  const handleSubmitForm = () => {\r\n    handleSubmit({\r\n      name,\r\n      description,\r\n      state,\r\n      severity,\r\n      priority,\r\n      isReproducible: isReproducible === 0\r\n    });\r\n  };\r\n  const handleInput = e => {\r\n    const { name } = e.target;\r\n    const { value } = e.target;\r\n\r\n    switch (name) {\r\n      case ISSUE_FORM_CONST.name:\r\n        setName(value);\r\n        break;\r\n      case ISSUE_FORM_CONST.description:\r\n        setDescription(value);\r\n        break;\r\n      case ISSUE_FORM_CONST.state:\r\n        setState(value);\r\n        break;\r\n      case ISSUE_FORM_CONST.severity:\r\n        setSeverity(value);\r\n        break;\r\n      case ISSUE_FORM_CONST.priority:\r\n        setPriority(value);\r\n        break;\r\n      case ISSUE_FORM_CONST.isReproducible:\r\n        setIsReproducible(value);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  const inputList = [\r\n    {\r\n      name: ISSUE_FORM_CONST.name,\r\n      type: \"text\",\r\n      value: name,\r\n      placeholder: ISSUE_FORM_CONST.name_placeholder,\r\n      title: ISSUE_FORM_CONST.name_placeholder,\r\n      inputType: inputType.text\r\n    },\r\n    {\r\n      name: ISSUE_FORM_CONST.description,\r\n      title: ISSUE_FORM_CONST.description_placeholder,\r\n      value: description,\r\n      placeholder: ISSUE_FORM_CONST.description_placeholder,\r\n      inputType: inputType.textarea\r\n    },\r\n    {\r\n      name: ISSUE_FORM_CONST.state,\r\n      title: ISSUE_FORM_CONST.state_title,\r\n      value: state,\r\n      option: STATE_OPTION,\r\n      inputType: inputType.select\r\n    },\r\n    {\r\n      name: ISSUE_FORM_CONST.severity,\r\n      title: ISSUE_FORM_CONST.severity_title,\r\n      value: severity,\r\n      option: SEVERITY_OPTION,\r\n      inputType: inputType.select\r\n    },\r\n    {\r\n      name: ISSUE_FORM_CONST.priority,\r\n      title: ISSUE_FORM_CONST.priority_title,\r\n      value: priority,\r\n      option: PRIORITY_OPTION,\r\n      inputType: inputType.select\r\n    },\r\n    {\r\n      name: ISSUE_FORM_CONST.isReproducible,\r\n      title: ISSUE_FORM_CONST.isReproducible_title,\r\n      value: isReproducible,\r\n      option: [ISSUE_FORM_CONST.yes, ISSUE_FORM_CONST.no],\r\n      inputType: inputType.radio\r\n    }\r\n  ];\r\n\r\n  const isActive = name.length > 0 && description.length > 0;\r\n\r\n  return (\r\n    <div className=\"issueForm_container bg-white rounded-4 max-h-full w-full overflow-y-auto text-18\">\r\n      <div className=\"issueForm_title text-20 font-bold\">\r\n        {ISSUE_FORM_CONST.newTitle}\r\n      </div>\r\n      <FormInput inputList={inputList} handleInput={handleInput} />\r\n      <FormFooterBtn\r\n        handleLeftOption={handleCancel}\r\n        handleRightOption={handleSubmitForm}\r\n        rightOption={ISSUE_FORM_CONST.newSubmit}\r\n        isActive={isActive}\r\n      />\r\n      <div className=\"text-red-600\">{errorMsg}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default IssueForm;\r\n","import React from \"react\";\r\n\r\nimport \"./style.scss\";\r\n\r\nconst PopUp = ({ children }) => {\r\n  return (\r\n    <div className=\"popUp_container fixed inset-0 bg-popUp\">\r\n      <div className=\"popUp w-full h-full relative flex justify-center items-center\">\r\n        {children}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PopUp;\r\n","export const FETCH_PROJECT_DETAIL = \"Project_DETAIL/FETCH_PROJECT_DETAIL\";\r\nexport const FETCH_PROJECT_DETAIL_SUCCESS =\r\n  \"Project_DETAIL/FETCH_PROJECT_DETAIL_SUCCESS\";\r\nexport const FETCH_PROJECT_DETAIL_FAIL =\r\n  \"Project_DETAIL/FETCH_PROJECT_DETAIL_FAIL\";\r\n\r\nexport const TOGGLE_NEW_ISSUE_FORM = \"Project_DETAIL/TOGGLE_NEW_ISSUE_FORM\";\r\nexport const ADD_NEW_ISSUE = \"Project_DETAIL/ADD_NEW_PROJECT\";\r\nexport const ADD_NEW_ISSUE_SUCCESS = \"Project_DETAIL/ADD_NEW_ISSUE_SUCCESS\";\r\nexport const ADD_NEW_ISSUE_FAIL = \"Project_DETAIL/ADD_NEW_ISSUE_FAIL\";\r\n\r\nexport const FETCH_PROJECT_ISSUE = \"Project_DETAIL/FETCH_PROJECT_ISSUE\";\r\nexport const FETCH_PROJECT_ISSUE_SUCCESS =\r\n  \"Project_DETAIL/FETCH_PROJECT_ISSUE_SUCCESS\";\r\nexport const FETCH_PROJECT_ISSUE_FAIL =\r\n  \"Project_DETAIL/FETCH_PROJECT_ISSUE_FAIL\";\r\nexport const FETCH_PROJECT_ISSUE_BOTTOM =\r\n  \"Project_DETAIL/FETCH_PROJECT_ISSUE_BOTTOM\";\r\n\r\nexport const CONST = {\r\n  projectName: \" Project name : \",\r\n  owner: \"Project owner : \",\r\n  description: \"Description : \",\r\n  createAT: \" Create At : \",\r\n  activeIssue: \"Active Issue : \",\r\n  closeIssue: \"Closed Issue : \",\r\n  memberCount: \"Member : \",\r\n  TagCount: \"Tags : \",\r\n  reportIssue: \"Report A Issue\",\r\n\r\n  issueTab_title: \"Issue List\"\r\n};\r\n\r\nexport const TAB = [\r\n  { query: null, name: \"Detail\" },\r\n  { query: \"issue\", name: \"Issue\" },\r\n  { query: \"tag\", name: \"Tag\" },\r\n  { query: \"member\", name: \"Member\" }\r\n];\r\n","export const toLocalTime = timestamp => {\r\n  const createAt = new Date(timestamp);\r\n  return createAt.toLocaleString();\r\n};\r\n","import React from \"react\";\r\nimport { CONST } from \"../constants\";\r\nimport { toLocalTime } from \"../../../utils/generalUtils\";\r\n\r\nconst DetailTab = ({ projectDetail }) => {\r\n  const {\r\n    create_time,\r\n    description,\r\n    finish_issue_count,\r\n    isPrivate,\r\n    issue_count,\r\n    member_count,\r\n    name,\r\n    owner,\r\n    tag_count\r\n  } = projectDetail;\r\n  return (\r\n    <>\r\n      <div className=\"projectDetail_subtitle text-18 font-semibold flex\">\r\n        {CONST.owner}\r\n        {owner}\r\n      </div>\r\n      <div className=\"projectDetail_subtitle text-18 font-semibold flex\">\r\n        {CONST.description}\r\n        {description}\r\n      </div>\r\n      <div className=\"projectDetail_subtitle text-18 font-semibold flex\">\r\n        {CONST.createAT}\r\n        {toLocalTime(create_time)}\r\n      </div>\r\n      <div className=\"projectDetail_subtitle text-18 font-semibold flex\">\r\n        {CONST.activeIssue}\r\n        {issue_count}\r\n      </div>\r\n      <div className=\"projectDetail_subtitle text-18 font-semibold flex\">\r\n        {CONST.closeIssue}\r\n        {finish_issue_count}\r\n      </div>\r\n      <div className=\"projectDetail_subtitle text-18 font-semibold flex\">\r\n        {CONST.memberCount}\r\n        {member_count}\r\n      </div>\r\n      <div className=\"projectDetail_subtitle text-18 font-semibold flex\">\r\n        {CONST.TagCount}\r\n        {tag_count}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DetailTab;\r\n","import React from \"react\";\r\n\r\nimport { toLocalTime } from \"../../utils/generalUtils\";\r\n\r\nimport \"./style.scss\";\r\n\r\nconst IssueCard = ({\r\n  id,\r\n  ReportUser,\r\n  create_time,\r\n  description,\r\n  isReproducible,\r\n  name,\r\n  priority,\r\n  projectId,\r\n  severity,\r\n  state\r\n}) => {\r\n  return (\r\n    <div className=\"IssueCard w-full\">\r\n      <div className=\"IssueCard_title text-20\">{name}</div>\r\n      <div>\r\n        state : {state}, priority:{priority}, severity:{severity}\r\n      </div>\r\n      <div>create at : {toLocalTime(create_time)}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default IssueCard;\r\n","import api from \"../api\";\r\nimport { apihost } from \"../../configConst\";\r\n\r\nconst ProjectApi = {};\r\n\r\nProjectApi.addNewProject = query => {\r\n  const url = `${\r\n    apihost[process.env.REACT_APP_ENV]\r\n  }/project?sessionId=${localStorage.getItem(\"sessionId\")}`;\r\n  return api.fire({\r\n    url,\r\n    method: \"POST\",\r\n    data: query\r\n  });\r\n};\r\n\r\nProjectApi.getProject = query => {\r\n  const url = `${\r\n    apihost[process.env.REACT_APP_ENV]\r\n  }/project/get?sessionId=${localStorage.getItem(\"sessionId\")}`;\r\n  return api.fire({\r\n    url,\r\n    method: \"POST\",\r\n    data: query\r\n  });\r\n};\r\n\r\nProjectApi.getProjectDetail = query => {\r\n  const url = `${\r\n    apihost[process.env.REACT_APP_ENV]\r\n  }/project/detail?sessionId=${localStorage.getItem(\"sessionId\")}`;\r\n  return api.fire({\r\n    url,\r\n    method: \"POST\",\r\n    data: query\r\n  });\r\n};\r\n\r\nexport default ProjectApi;\r\n","import api from \"../api\";\r\nimport { apihost } from \"../../configConst\";\r\n\r\nconst IssueAPI = {};\r\n\r\nIssueAPI.addNewIssue = query => {\r\n  const url = `${\r\n    apihost[process.env.REACT_APP_ENV]\r\n  }/issue?sessionId=${localStorage.getItem(\"sessionId\")}`;\r\n  return api.fire({\r\n    url,\r\n    method: \"POST\",\r\n    data: query\r\n  });\r\n};\r\n\r\nIssueAPI.getIssueByProjectId = query => {\r\n  const url = `${\r\n    apihost[process.env.REACT_APP_ENV]\r\n  }/issue/project?sessionId=${localStorage.getItem(\"sessionId\")}`;\r\n  return api.fire({\r\n    url,\r\n    method: \"POST\",\r\n    data: query\r\n  });\r\n};\r\n\r\nexport default IssueAPI;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport { useDispatch, useSelector, useStore } from \"react-redux\";\r\n\r\nimport IssueCard from \"../../../components/IssueCard\";\r\nimport LoadingSpinner from \"../../../components/LoadingSpinner\";\r\n\r\nimport { CONST } from \"../constants\";\r\nimport { HIT_BOTTOM } from \"../../../utils/configConst\";\r\nimport * as actions from \"../actions\";\r\n\r\nconst IssueTab = ({}) => {\r\n  const dispatch = useDispatch();\r\n  const {\r\n    projectDetail,\r\n    projectIssueList,\r\n    isFetchingProjectIssue,\r\n    isProjectIssueFetchBottom,\r\n    projectIssueTimestamp\r\n  } = useSelector(state => state.ProjectDetailReducer);\r\n\r\n  const handleFetchIssue = () => {\r\n    actions.fetchProjectIssue(\r\n      projectDetail.id,\r\n      projectIssueTimestamp\r\n    )(dispatch);\r\n  };\r\n\r\n  const handleScroll = () => {\r\n    if (\r\n      window.innerHeight + Math.ceil(window.scrollY) >=\r\n        document.body.offsetHeight &&\r\n      !isFetchingProjectIssue &&\r\n      !isProjectIssueFetchBottom\r\n    ) {\r\n      handleFetchIssue();\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    window.addEventListener(\"scroll\", handleScroll);\r\n    return () => {\r\n      window.removeEventListener(\"scroll\", handleScroll);\r\n    };\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (projectIssueTimestamp === null) {\r\n      handleFetchIssue();\r\n    }\r\n  }, []);\r\n  return (\r\n    <div className=\"IssueTab_container w-full\">\r\n      <div className=\"IssueTab_title text-20 font-semibold\">\r\n        {CONST.issueTab_title}\r\n      </div>\r\n      <div className=\"IssueTab_Issues_container\">\r\n        {projectIssueList.map(e => (\r\n          <IssueCard\r\n            key={`pit${e.id}`}\r\n            id={e.id}\r\n            ReportUser={e.ReportUser}\r\n            create_time={e.create_time}\r\n            description={e.description}\r\n            isReproducible={e.isReproducible}\r\n            name={e.name}\r\n            priority={e.priority}\r\n            projectId={e.projectId}\r\n            severity={e.severity}\r\n            state={e.state}\r\n          />\r\n        ))}\r\n        {isFetchingProjectIssue ? <LoadingSpinner /> : null}\r\n        {isProjectIssueFetchBottom ? HIT_BOTTOM : null}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default IssueTab;\r\n","import ProjectApi from \"../../utils/api/apifetcher/project\";\r\nimport IssueApi from \"../../utils/api/apifetcher/issue\";\r\n\r\nimport {\r\n  FETCH_PROJECT_DETAIL,\r\n  FETCH_PROJECT_DETAIL_SUCCESS,\r\n  FETCH_PROJECT_DETAIL_FAIL,\r\n  TOGGLE_NEW_ISSUE_FORM,\r\n  ADD_NEW_ISSUE,\r\n  ADD_NEW_ISSUE_SUCCESS,\r\n  ADD_NEW_ISSUE_FAIL,\r\n  FETCH_PROJECT_ISSUE,\r\n  FETCH_PROJECT_ISSUE_SUCCESS,\r\n  FETCH_PROJECT_ISSUE_FAIL,\r\n  FETCH_PROJECT_ISSUE_BOTTOM\r\n} from \"./constants\";\r\n\r\nimport { red_alert, FETCH_ISSUE_LIMIT } from \"../../utils/configConst\";\r\n\r\nexport const fetchProjectDetial = (user, project) => dispatch => {\r\n  dispatch({ type: FETCH_PROJECT_DETAIL });\r\n  ProjectApi.getProjectDetail({ user, project }).then(\r\n    res => {\r\n      dispatch({ type: FETCH_PROJECT_DETAIL_SUCCESS, payload: res.data });\r\n    },\r\n    rej => {\r\n      const { response } = rej;\r\n      const { status } = response;\r\n      const errMsg =\r\n        status === 404 ? red_alert.NOT_FOUND : red_alert.TRY_AGAIN_LATHER;\r\n      dispatch({ type: FETCH_PROJECT_DETAIL_FAIL, payload: errMsg });\r\n    }\r\n  );\r\n};\r\n\r\nexport const toogleNewIssueForm = () => dispatch => {\r\n  dispatch({ type: TOGGLE_NEW_ISSUE_FORM });\r\n};\r\n\r\nexport const addNewIssue = query => dispatch => {\r\n  dispatch({ type: ADD_NEW_ISSUE });\r\n  IssueApi.addNewIssue(query).then(\r\n    res => {\r\n      dispatch({ type: ADD_NEW_ISSUE_SUCCESS, payload: res.data });\r\n    },\r\n    rej => {\r\n      dispatch({\r\n        type: ADD_NEW_ISSUE_FAIL,\r\n        payload: red_alert.TRY_AGAIN_LATHER\r\n      });\r\n    }\r\n  );\r\n};\r\n\r\nexport const fetchProjectIssue = (projectId, timeStamp) => dispatch => {\r\n  dispatch({ type: FETCH_PROJECT_ISSUE });\r\n  const query = {\r\n    timestamp: timeStamp,\r\n    projectId: projectId,\r\n    limit: FETCH_ISSUE_LIMIT\r\n  };\r\n  IssueApi.getIssueByProjectId(query).then(\r\n    res => {\r\n      if (res.data.length)\r\n        dispatch({ type: FETCH_PROJECT_ISSUE_SUCCESS, payload: res.data });\r\n      else dispatch({ type: FETCH_PROJECT_ISSUE_BOTTOM, payload: res.data });\r\n    },\r\n    rej => {\r\n      dispatch({ type: FETCH_PROJECT_ISSUE_FAIL });\r\n    }\r\n  );\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Link, useParams, useLocation } from \"react-router-dom\";\r\nimport { useDispatch, useSelector, useStore } from \"react-redux\";\r\n\r\nimport Layout from \"../../components/Layout\";\r\nimport AddButton from \"../../components/AddButton\";\r\nimport LoadingSpinner from \"../../components/LoadingSpinner\";\r\nimport IssueForm from \"../../components/IssueForm\";\r\nimport PopUp from \"../../components/PopUp\";\r\n\r\nimport DetailTab from \"./DetailTab\";\r\nimport IssueTab from \"./IssueTab\";\r\n\r\nimport PRIVATE_ICON from \"../../utils/image/locked_project.svg\";\r\nimport PUBLIC_ICON from \"../../utils/image/project.svg\";\r\n\r\nimport { PROJECT_DETIAL_LINK } from \"../../utils/pathConst\";\r\nimport { CONST, TAB } from \"./constants\";\r\n\r\nimport * as actions from \"./actions\";\r\n\r\nimport \"./style.scss\";\r\n\r\nconst useQuery = () => {\r\n  return new URLSearchParams(useLocation().search);\r\n};\r\n\r\nconst ProjectDetail = () => {\r\n  const { user, project } = useParams();\r\n  const tab = useQuery().get(\"tab\");\r\n  const dispatch = useDispatch();\r\n  const {\r\n    isFetchingProjectDetail,\r\n    projectDetail,\r\n    showNewIssueForm,\r\n    newIssueErrorMsg,\r\n    isAddingIssue,\r\n    fetchProjectDetailError\r\n  } = useSelector(state => state.ProjectDetailReducer);\r\n  let loadedProfile = projectDetail !== null;\r\n  useEffect(() => {\r\n    if (\r\n      projectDetail &&\r\n      user === projectDetail.owner &&\r\n      project === projectDetail.name\r\n    ) {\r\n      loadedProfile = false;\r\n      return;\r\n    }\r\n    actions.fetchProjectDetial(user, project)(dispatch);\r\n  }, [user, project]);\r\n\r\n  const toggleNewIssueForm = () => {\r\n    actions.toogleNewIssueForm()(dispatch);\r\n  };\r\n\r\n  const handleSubmit = query => {\r\n    query.projectId = projectDetail.id;\r\n    actions.addNewIssue(query)(dispatch);\r\n  };\r\n\r\n  const renderProjectHeader = () => {\r\n    return (\r\n      <div className=\"projectDetail_header flex justify-between flex-row items-center\">\r\n        <div className=\"projectDetail_title text-20 font-semibold flex\">\r\n          {CONST.projectName}\r\n          {project}\r\n        </div>\r\n        <AddButton action={toggleNewIssueForm} wording={CONST.reportIssue} />\r\n      </div>\r\n    );\r\n  };\r\n  const renderProjectTab = () => {\r\n    return (\r\n      <div className=\"projectDetail_tab_container flex justify-between flex-row items-center text-18 text-center\">\r\n        {TAB.map(e => (\r\n          <Link\r\n            to={`/p/${user}/${project}${e.query ? `?tab=${e.query}` : \"\"}`}\r\n            className={`projectDetail_tab flex-grow${\r\n              tab === e.query ? \" bg-main text-white\" : \"\"\r\n            }`}\r\n            key={`pd_tab${e.name}`}\r\n          >\r\n            <div>{e.name}</div>\r\n          </Link>\r\n        ))}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const renderMainContent = () => {\r\n    switch (tab) {\r\n      case TAB[1].query:\r\n        return <IssueTab />;\r\n      case TAB[2].query:\r\n        return \"\";\r\n      case TAB[3].query:\r\n        return \"\";\r\n      default:\r\n        return <DetailTab projectDetail={projectDetail} />;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Layout isLogined={true}>\r\n      <div className=\"projectDetail w-full\">\r\n        {fetchProjectDetailError ? (\r\n          fetchProjectDetailError\r\n        ) : (\r\n          <>\r\n            {renderProjectHeader()}\r\n            {renderProjectTab()}\r\n            {isFetchingProjectDetail || !loadedProfile ? (\r\n              <LoadingSpinner />\r\n            ) : (\r\n              renderMainContent()\r\n            )}\r\n          </>\r\n        )}\r\n      </div>\r\n      {showNewIssueForm ? (\r\n        <PopUp>\r\n          <IssueForm\r\n            handleCancel={isAddingIssue ? null : toggleNewIssueForm}\r\n            handleSubmit={handleSubmit}\r\n            errorMsg={newIssueErrorMsg}\r\n          />\r\n        </PopUp>\r\n      ) : null}\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default ProjectDetail;\r\n","export const PROJECT_FORM_CONST = {\r\n  newTitle: \"Add New Project\",\r\n  editTitle: \"Edit Project\",\r\n\r\n  name: \"name\",\r\n  name_placeholder: \"Project Name\",\r\n\r\n  description: \"description\",\r\n  description_placeholder: \"Description\",\r\n\r\n  isPrivate: \"isPrivate\",\r\n  isPrivate_title: \"Is Private ?\",\r\n  private: \"Private\",\r\n  public: \"Public\",\r\n\r\n  newSubmit: \"Add\",\r\n  editSubmit: \"Save\"\r\n};\r\n","import React, { useState } from \"react\";\r\n\r\nimport FormInput from \"../FormInput\";\r\nimport FormFooterBtn from \"../FormFooterBtn\";\r\n\r\nimport { PROJECT_FORM_CONST } from \"./constant\";\r\nimport { inputType } from \"../../utils/configConst\";\r\n\r\nimport \"./style.scss\";\r\n\r\nconst ProjectForm = ({ handleCancel, handleSubmit, errorMsg }) => {\r\n  const [name, setName] = useState(\"\");\r\n  const [description, setDescription] = useState(\"\");\r\n  const [isPrivate, setIsPrivate] = useState(0);\r\n\r\n  const handleSubmitForm = () => {\r\n    handleSubmit({\r\n      name: name,\r\n      description: description,\r\n      isPrivate: parseInt(isPrivate) === 1\r\n    });\r\n  };\r\n\r\n  const handleInput = e => {\r\n    const { name } = e.target;\r\n    const { value } = e.target;\r\n    switch (name) {\r\n      case PROJECT_FORM_CONST.name:\r\n        setName(value);\r\n        break;\r\n      case PROJECT_FORM_CONST.description:\r\n        setDescription(value);\r\n        break;\r\n      case PROJECT_FORM_CONST.isPrivate:\r\n        setIsPrivate(value);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  const inputList = [\r\n    {\r\n      name: PROJECT_FORM_CONST.name,\r\n      type: \"text\",\r\n      value: name,\r\n      placeholder: PROJECT_FORM_CONST.name_placeholder,\r\n      title: PROJECT_FORM_CONST.name_placeholder,\r\n      inputType: inputType.text\r\n    },\r\n    {\r\n      name: PROJECT_FORM_CONST.description,\r\n      title: PROJECT_FORM_CONST.description_placeholder,\r\n      value: description,\r\n      placeholder: PROJECT_FORM_CONST.description_placeholder,\r\n      inputType: inputType.textarea\r\n    },\r\n    {\r\n      name: PROJECT_FORM_CONST.isPrivate,\r\n      title: PROJECT_FORM_CONST.isPrivate_title,\r\n      value: isPrivate,\r\n      option: [PROJECT_FORM_CONST.public, PROJECT_FORM_CONST.private],\r\n      inputType: inputType.radio\r\n    }\r\n  ];\r\n\r\n  return (\r\n    <div className=\"projectForm_container bg-white rounded-4 max-h-full w-full overflow-y-auto text-18\">\r\n      <div className=\"projectForm_title text-20 font-bold\">\r\n        {PROJECT_FORM_CONST.newTitle}\r\n      </div>\r\n      <FormInput inputList={inputList} handleInput={handleInput} />\r\n      <FormFooterBtn\r\n        handleLeftOption={handleCancel}\r\n        handleRightOption={handleSubmitForm}\r\n        rightOption={PROJECT_FORM_CONST.newSubmit}\r\n        isActive={name.length > 0}\r\n      />\r\n      <div className=\"text-red-600\">{errorMsg}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProjectForm;\r\n","export const CONST = {\r\n  title: \" Project : \",\r\n  createAT: \" Create At : \"\r\n};\r\n","import React from \"react\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\nimport PRIVATE_ICON from \"../../utils/image/locked_project.svg\";\r\nimport PUBLIC_ICON from \"../../utils/image/project.svg\";\r\n\r\nimport { PROJECT_DETIAL_LINK } from \"../../utils/pathConst\";\r\nimport { toLocalTime } from \"../../utils/generalUtils\";\r\nimport { CONST } from \"./constant\";\r\nimport \"./style.scss\";\r\n\r\nconst ProjectCard = ({\r\n  id,\r\n  name,\r\n  description,\r\n  create_time,\r\n  isPrivate,\r\n  owner\r\n}) => {\r\n  return (\r\n    <div className=\"projectCard w-full\">\r\n      <div className=\"projectCard_title text-20 font-semibold flex\">\r\n        <img\r\n          className=\"projectCard_icon\"\r\n          src={isPrivate ? PRIVATE_ICON : PUBLIC_ICON}\r\n        />\r\n        <Link\r\n          to={PROJECT_DETIAL_LINK(owner, name)}\r\n        >{`${CONST.title}${owner}/${name}`}</Link>\r\n      </div>\r\n      <div className=\"projectCard_createAt text-16\">\r\n        {`${CONST.createAT}${toLocalTime(create_time)}`}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProjectCard;\r\n","export const FETCH_PROJECTS = \"Projects/FETCH_PROJECTS\";\r\nexport const FETCH_PROJECTS_SUCCESS = \"Projects/FETCH_PROJECTS_SUCCESS\";\r\nexport const FETCH_PROJECTS_BOTTOM = \"Projects/FETCH_PROJECTS_BOTTOM\";\r\n\r\nexport const TOGGLE_NEW_PROJECT_FORM = \"Projects/TOGGLE_NEW_PROJECT_FORM\";\r\nexport const ADD_NEW_PROJECT = \"Projects/ADD_NEW_PROJECT\";\r\nexport const ADD_NEW_PROJECT_SUCCESS = \"Projects/ADD_NEW_PROJECT_SUCCESS\";\r\nexport const ADD_NEW_PROJECT_FAIL = \"Projects/ADD_NEW_PROJECT_FAIL\";\r\n\r\nexport const NEW_PROJECT = \"New Project\";\r\nexport const TITLE = \"Project List\";\r\n","import {\r\n  FETCH_PROJECTS,\r\n  FETCH_PROJECTS_SUCCESS,\r\n  FETCH_PROJECTS_BOTTOM,\r\n  ADD_NEW_PROJECT,\r\n  ADD_NEW_PROJECT_SUCCESS,\r\n  ADD_NEW_PROJECT_FAIL,\r\n  TOGGLE_NEW_PROJECT_FORM\r\n} from \"./constants\";\r\nimport ProjectApi from \"../../utils/api/apifetcher/project\";\r\nimport { red_alert, FETCH_PROJECT_LIMIT } from \"../../utils/configConst\";\r\n\r\nexport const addNewProject = query => dispatch => {\r\n  dispatch({ type: ADD_NEW_PROJECT });\r\n  ProjectApi.addNewProject(query).then(\r\n    res => {\r\n      dispatch({ type: ADD_NEW_PROJECT_SUCCESS, payload: res.data });\r\n    },\r\n    rej => {\r\n      const { response } = rej;\r\n      const { status } = response;\r\n      const errMsg =\r\n        status === 409\r\n          ? red_alert.PROJECT_NAME_REPEATED\r\n          : red_alert.TRY_AGAIN_LATHER;\r\n\r\n      dispatch({ type: ADD_NEW_PROJECT_FAIL, payload: errMsg });\r\n    }\r\n  );\r\n};\r\n\r\nexport const fetchProjects = projectTimestamp => dispatch => {\r\n  dispatch({ type: FETCH_PROJECTS });\r\n  const query = {\r\n    timestamp: projectTimestamp,\r\n    user_id: localStorage.getItem(\"profileId\"),\r\n    limit: FETCH_PROJECT_LIMIT,\r\n    isOwner: false\r\n  };\r\n  ProjectApi.getProject(query).then(\r\n    res => {\r\n      const { data } = res;\r\n      if (data.length)\r\n        dispatch({ type: FETCH_PROJECTS_SUCCESS, payload: data });\r\n      else dispatch({ type: FETCH_PROJECTS_BOTTOM, payload: data });\r\n    },\r\n    rej => {\r\n      console.log(rej);\r\n    }\r\n  );\r\n};\r\n\r\nexport const toggleNewProjectForm = () => dispatch => {\r\n  dispatch({ type: TOGGLE_NEW_PROJECT_FORM });\r\n};\r\n","import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport Layout from \"../../components/Layout\";\r\nimport AddButton from \"../../components/AddButton\";\r\nimport PopUp from \"../../components/PopUp\";\r\nimport LoadingSpinner from \"../../components/LoadingSpinner\";\r\nimport ProjectForm from \"../../components/ProjectForm\";\r\nimport ProjectCard from \"../../components/ProjectCard\";\r\n\r\nimport { HIT_BOTTOM } from \"../../utils/configConst\";\r\nimport { NEW_PROJECT, TITLE } from \"./constants\";\r\nimport * as actions from \"./actions\";\r\nimport \"./style.scss\";\r\n\r\nconst Projects = () => {\r\n  const dispatch = useDispatch();\r\n  const {\r\n    projectList,\r\n    projectTimestamp,\r\n    isFetchingProject,\r\n    isProjectFetchBottom,\r\n\r\n    isAddingProject,\r\n    showNewProjectForm,\r\n    newProjectErrorMsg\r\n  } = useSelector(state => state.ProjectsReducer);\r\n\r\n  useEffect(() => {\r\n    if (projectTimestamp === null) actions.fetchProjects()(dispatch);\r\n  }, []);\r\n\r\n  const handleScroll = () => {\r\n    if (\r\n      window.innerHeight + Math.ceil(window.scrollY) >=\r\n        document.body.offsetHeight &&\r\n      !isFetchingProject &&\r\n      !isProjectFetchBottom\r\n    ) {\r\n      actions.fetchProjects(projectTimestamp)(dispatch);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    window.addEventListener(\"scroll\", handleScroll);\r\n    return () => {\r\n      window.removeEventListener(\"scroll\", handleScroll);\r\n    };\r\n  });\r\n\r\n  const toggleNewProjectForm = () => {\r\n    actions.toggleNewProjectForm()(dispatch);\r\n  };\r\n\r\n  const handleSubmit = query => {\r\n    if (!isAddingProject) actions.addNewProject(query)(dispatch);\r\n  };\r\n\r\n  return (\r\n    <Layout isLogined={true}>\r\n      <div className=\"project_container w-full\">\r\n        <div className=\"project_header w-full flex justify-between items-center\">\r\n          <p className=\" text-20 font-semibold\">{TITLE}</p>\r\n          <AddButton action={toggleNewProjectForm} wording={NEW_PROJECT} />\r\n        </div>\r\n\r\n        <div className=\"project_list w-full\">\r\n          {projectList.map(e => {\r\n            return (\r\n              <ProjectCard\r\n                key={`$projectCard${e.id}`}\r\n                id={e.id}\r\n                name={e.name}\r\n                description={e.description}\r\n                create_time={e.create_time}\r\n                isPrivate={e.isPrivate}\r\n                owner={e.owner}\r\n              />\r\n            );\r\n          })}\r\n          {isFetchingProject ? <LoadingSpinner /> : null}\r\n          {isProjectFetchBottom ? HIT_BOTTOM : null}\r\n        </div>\r\n      </div>\r\n      {showNewProjectForm ? (\r\n        <PopUp>\r\n          <ProjectForm\r\n            handleCancel={isAddingProject ? null : toggleNewProjectForm}\r\n            handleSubmit={handleSubmit}\r\n            errorMsg={newProjectErrorMsg}\r\n          />\r\n        </PopUp>\r\n      ) : null}\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default Projects;\r\n","export const FETCH_ISSUE_SUCCESS = \"ISSUE/FETCH_ISSUE_SUCCESS\";\r\n","import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Layout from \"../../components/Layout\";\r\nimport * as actions from \"./actions\";\r\n\r\nconst Issue = () => {\r\n  const issueList = useSelector(state => state.IssueReducer.issueList);\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    actions.fetchIssue()(dispatch);\r\n  }, []);\r\n  return (\r\n    <Layout isLogined={true}>\r\n      <div>test issue reducer : {issueList} </div>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default Issue;\r\n","import { FETCH_ISSUE_SUCCESS } from \"./constants\";\r\n\r\nexport const fetchIssue = () => dispatch => {\r\n  dispatch({ type: FETCH_ISSUE_SUCCESS, payload: [456] });\r\n};\r\n","import React from \"react\";\n\nimport { HashRouter as Router, Route } from \"react-router-dom\";\nimport LoginFrom from \"./components/AuthFrom/LoginForm\";\nimport RegisterFrom from \"./components/AuthFrom/RegisterFrom\";\nimport Dashboard from \"./components/Dashboard\";\nimport ProjectDetail from \"./containers/ProjectDetail\";\nimport Projects from \"./containers/Projects\";\nimport Issue from \"./containers/Issue\";\nimport { version } from \"../package.json\";\n\nimport * as PATH from \"./utils/pathConst\";\n\nimport \"./App.css\";\nfunction App() {\n  console.log(\"version \" + version);\n  console.log(process.env);\n  return (\n    <div className=\"App\">\n      <Router basename=\"/\">\n        <Route path={PATH.LOGIN} component={LoginFrom} />\n        <Route path={PATH.REGISTER} component={RegisterFrom} />\n        <Route path={PATH.DASHBOARD} component={Dashboard} />\n        <Route path={PATH.PROJECT} component={Projects} />\n        <Route path={PATH.ISSUE} component={Issue} />\n        <Route path={PATH.SETTING} component={Dashboard} />\n        <Route path={PATH.PROJECT_DETIAL} component={ProjectDetail} />\n        <Route path=\"/\" exact component={LoginFrom} />\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","import {\r\n  FETCH_PROJECTS,\r\n  FETCH_PROJECTS_SUCCESS,\r\n  FETCH_PROJECTS_BOTTOM,\r\n  ADD_NEW_PROJECT_SUCCESS,\r\n  ADD_NEW_PROJECT_FAIL,\r\n  ADD_NEW_PROJECT,\r\n  TOGGLE_NEW_PROJECT_FORM\r\n} from \"./constants\";\r\n\r\nconst initialState = {\r\n  projectList: [],\r\n  isFetchingProject: false,\r\n  isProjectFetchBottom: false,\r\n  projectTimestamp: null,\r\n\r\n  showNewProjectForm: false,\r\n  newProjectErrorMsg: null,\r\n  isAddingProject: false\r\n};\r\n\r\nexport default function reducer(state = initialState, actions) {\r\n  const { type, payload } = actions;\r\n  const { projectList } = state;\r\n  switch (type) {\r\n    case FETCH_PROJECTS:\r\n      return { ...state, isFetchingProject: true };\r\n    case FETCH_PROJECTS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        projectList: projectList.concat(payload),\r\n        projectTimestamp: payload[payload.length - 1].create_time,\r\n        isFetchingProject: false\r\n      };\r\n    case FETCH_PROJECTS_BOTTOM:\r\n      return {\r\n        ...state,\r\n        isProjectFetchBottom: true,\r\n        isFetchingProject: false\r\n      };\r\n    case TOGGLE_NEW_PROJECT_FORM:\r\n      return {\r\n        ...state,\r\n        showNewProjectForm: !state.showNewProjectForm,\r\n        newProjectErrorMsg: null\r\n      };\r\n    case ADD_NEW_PROJECT:\r\n      return { ...state, isAddingProject: true };\r\n    case ADD_NEW_PROJECT_SUCCESS:\r\n      return {\r\n        ...state,\r\n        isAddingProject: false,\r\n        showNewProjectForm: false,\r\n        projectList: [payload].concat(projectList)\r\n      };\r\n    case ADD_NEW_PROJECT_FAIL:\r\n      return { ...state, isAddingProject: false, newProjectErrorMsg: payload };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { FETCH_ISSUE_SUCCESS } from \"./constants\";\r\n\r\nconst initialState = {\r\n  issueList: []\r\n};\r\n\r\nexport default function reducer(state = initialState, actions) {\r\n  const { type, payload } = actions;\r\n  switch (type) {\r\n    case FETCH_ISSUE_SUCCESS:\r\n      return {\r\n        ...state,\r\n        issueList: state.issueList.concat(payload)\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { AUTH_SUCCESS, AUTH_LOGOUT } from \"./constants\";\r\n\r\nconst initialState = {\r\n  username: \"\"\r\n};\r\n\r\nexport default function reducer(state = initialState, actions) {\r\n  const { type, payload } = actions;\r\n  switch (type) {\r\n    case AUTH_SUCCESS:\r\n      return {\r\n        ...state,\r\n        username: payload.username\r\n      };\r\n    case AUTH_LOGOUT:\r\n      return { ...state, ...initialState };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {\r\n  FETCH_PROJECT_DETAIL,\r\n  FETCH_PROJECT_DETAIL_SUCCESS,\r\n  FETCH_PROJECT_DETAIL_FAIL,\r\n  TOGGLE_NEW_ISSUE_FORM,\r\n  ADD_NEW_ISSUE,\r\n  ADD_NEW_ISSUE_SUCCESS,\r\n  ADD_NEW_ISSUE_FAIL,\r\n  FETCH_PROJECT_ISSUE,\r\n  FETCH_PROJECT_ISSUE_SUCCESS,\r\n  FETCH_PROJECT_ISSUE_FAIL,\r\n  FETCH_PROJECT_ISSUE_BOTTOM\r\n} from \"./constants\";\r\n\r\nconst initialState = {\r\n  isFetchingProjectDetail: false,\r\n  fetchProjectDetailError: null,\r\n  projectDetail: null,\r\n\r\n  projectIssueList: [],\r\n  isFetchingProjectIssue: false,\r\n  isProjectIssueFetchBottom: false,\r\n  projectIssueTimestamp: null,\r\n\r\n  showNewIssueForm: false,\r\n  newIssueErrorMsg: null,\r\n  isAddingIssue: false\r\n};\r\n\r\nexport default function reducer(state = initialState, actions) {\r\n  const { type, payload } = actions;\r\n  let projectDetail;\r\n  switch (type) {\r\n    case FETCH_PROJECT_DETAIL:\r\n      return {\r\n        ...initialState,\r\n        isFetchingProjectDetail: true,\r\n        fetchProjectDetailError: null\r\n      };\r\n    case FETCH_PROJECT_DETAIL_SUCCESS:\r\n      return {\r\n        ...state,\r\n        isFetchingProjectDetail: false,\r\n        projectDetail: payload\r\n      };\r\n    case FETCH_PROJECT_DETAIL_FAIL:\r\n      return {\r\n        ...state,\r\n        isFetchingProjectDetail: false,\r\n        fetchProjectDetailError: payload,\r\n        projectDetail: {}\r\n      };\r\n    case TOGGLE_NEW_ISSUE_FORM:\r\n      return {\r\n        ...state,\r\n        showNewIssueForm: !state.showNewIssueForm,\r\n        newIssueErrorMsg: null\r\n      };\r\n\r\n    case ADD_NEW_ISSUE:\r\n      return { ...state, isAddingIssue: true };\r\n    case ADD_NEW_ISSUE_SUCCESS:\r\n      projectDetail = { ...state.projectDetail };\r\n      if (payload.state < 3) projectDetail.issue_count += 1;\r\n      else projectDetail.finish_issue_count += 1;\r\n      return {\r\n        ...state,\r\n        isAddingIssue: false,\r\n        showNewIssueForm: false,\r\n        projectIssueList: [payload].concat(state.projectIssueList),\r\n        projectDetail\r\n      };\r\n    case ADD_NEW_ISSUE_FAIL:\r\n      return { ...state, isAddingIssue: false, newIssueErrorMsg: payload };\r\n    case FETCH_PROJECT_ISSUE:\r\n      return { ...state, isFetchingProjectIssue: true };\r\n    case FETCH_PROJECT_ISSUE_SUCCESS:\r\n      return {\r\n        ...state,\r\n        isFetchingProjectIssue: false,\r\n        projectIssueList: state.projectIssueTimestamp\r\n          ? state.projectIssueList.concat(payload)\r\n          : payload,\r\n        projectIssueTimestamp: payload[payload.length - 1].create_time\r\n      };\r\n    case FETCH_PROJECT_ISSUE_FAIL:\r\n      return {\r\n        ...state,\r\n        isFetchingProjectIssue: false,\r\n        fetchProjectDetailError: payload\r\n      };\r\n    case FETCH_PROJECT_ISSUE_BOTTOM:\r\n      return {\r\n        ...state,\r\n        isProjectIssueFetchBottom: true,\r\n        isFetchingProjectIssue: false\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport ProjectsReducer from \"../containers/Projects/reducer\";\r\nimport IssueReducer from \"../containers/Issue/reducer\";\r\nimport AuthReducer from \"../containers/Auth/reducer\";\r\nimport ProjectDetailReducer from \"../containers/ProjectDetail/reducer\";\r\n\r\nexport default combineReducers({\r\n  ProjectsReducer,\r\n  AuthReducer,\r\n  IssueReducer,\r\n  ProjectDetailReducer\r\n});\r\n","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport ReduxPromise from \"redux-promise\";\r\nimport ReduxThunk from \"redux-thunk\";\r\n\r\nimport reducers from \"../reducers\";\r\n\r\n/**\r\n * Inject middle-ware to enhance redux store.\r\n */\r\nfunction enhancer() {\r\n  const middlewares = [ReduxThunk, ReduxPromise];\r\n  return compose(applyMiddleware(...middlewares));\r\n}\r\n\r\n/**\r\n * Define the global store to handle all application data\r\n *\r\n * In redux app, there should be only one store in whole application.\r\n */\r\nconst generateStore = () => {\r\n  const store = createStore(reducers, enhancer());\r\n  return store;\r\n};\r\n\r\nconst store = generateStore();\r\nexport default store;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n  // [::1] is the IPv6 localhost address.\r\n  window.location.hostname === '[::1]' ||\r\n  // 127.0.0.1/8 is considered localhost for IPv4.\r\n  window.location.hostname.match(\r\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n  )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.REACT_APP_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n            'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}